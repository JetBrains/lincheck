# Thread 1
ImmutableListTest.empty() at :0
  persistentListOf(): SmallPersistentVector@1 at ImmutableListTest.kt:20
    persistentVectorOf(): SmallPersistentVector@1 at extensions.kt:452
      SmallPersistentVector.getEMPTY(): SmallPersistentVector@1 at Utils.kt:18
        SmallPersistentVector.access$getEMPTY$cp(): SmallPersistentVector@1 at SmallPersistentVector.kt:163
  empty1 = SmallPersistentVector@1 at ImmutableListTest.kt:20
  persistentListOf(): SmallPersistentVector@1 at ImmutableListTest.kt:21
    persistentVectorOf(): SmallPersistentVector@1 at extensions.kt:452
      SmallPersistentVector.getEMPTY(): SmallPersistentVector@1 at Utils.kt:18
        SmallPersistentVector.access$getEMPTY$cp(): SmallPersistentVector@1 at SmallPersistentVector.kt:163
  empty2 = SmallPersistentVector@1 at ImmutableListTest.kt:21
  assertEquals$default(empty1, empty2, null, 4, null) at ImmutableListTest.kt:22
  emptyList(): EmptyList@1 at ImmutableListTest.kt:23
  assertEquals$default(EmptyList@1, empty1, null, 4, null) at ImmutableListTest.kt:23
  assertTrue$default(true, null, 2, null) at ImmutableListTest.kt:24
  Reflection.getOrCreateKotlinClass(Class@1): KClassImpl@1 at ImmutableListTest.kt:26
  i$a$-assertFailsWith$default-ImmutableListTest$empty$1 = 0 at fake.kt:1
  empty1.iterator(): BufferIterator@1 at ImmutableListTest.kt:26
    listIterator(): BufferIterator@1 at AbstractPersistentList.kt:60
      listIterator(0): BufferIterator@1 at AbstractPersistentList.kt:64
        ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
  BufferIterator@1.next(): threw java.util.NoSuchElementException at ImmutableListTest.kt:26
    hasNext(): false at BufferIterator.kt:14
  createFailure(NoSuchElementException@1): Result.Failure@1 at ImmutableListTest.kt:26
  Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ImmutableListTest.kt:26
  checkResultIsFailure(KClassImpl@1, null, Result.Failure@1): NoSuchElementException@1 at ImmutableListTest.kt:26
  emptyList(): EmptyList@1 at ImmutableListTest.kt:28
  compareLists(EmptyList@1, empty1) at ImmutableListTest.kt:28
    compare(expected, actual, ImmutableListTest$$Lambda@1) at ImmutableListTest.kt:16
      block.invoke(CompareContext@1): Unit at ComparisonDSL.kt:12
        listBehavior(compare) at ImmutableListTest.kt:16
          equalityBehavior(CompareContext@1, "", true) at CollectionBehaviors.kt:9
            "".append(objectName ➜ ""): "" at CollectionBehaviors.kt:96
            objectName.length(): 0 at CollectionBehaviors.kt:96
            "".append(""): "" at CollectionBehaviors.kt:96
            "".toString(): "" at CollectionBehaviors.kt:96
            prefix = "" at CollectionBehaviors.kt:96
            equalityBehavior.equals(objectName ➜ "") at CollectionBehaviors.kt:97
              assertEquals(this.expected, this.actual, message ➜ "") at ComparisonDSL.kt:18
            "".append(prefix ➜ ""): "" at CollectionBehaviors.kt:98
            "".append("hashCode"): "hashCode" at CollectionBehaviors.kt:98
            "hashCode".toString(): "hashCode" at CollectionBehaviors.kt:98
            equalityBehavior.propertyEquals("hashCode", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:98
              getter.invoke(this.expected): 1 at ComparisonDSL.kt:21
                propertyEquals.hashCode(): 1 at CollectionBehaviors.kt:98
              getter.invoke(this.actual): 1 at ComparisonDSL.kt:21
                propertyEquals.hashCode(): 1 at CollectionBehaviors.kt:98
                  listIterator(): BufferIterator@1 at AbstractPersistentList.kt:60
                    listIterator(0): BufferIterator@1 at AbstractPersistentList.kt:64
                      ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
              assertEquals(1, 1, message ➜ "hashCode") at ComparisonDSL.kt:21
            "".append(prefix ➜ ""): "" at CollectionBehaviors.kt:100
            "".append("toString"): "toString" at CollectionBehaviors.kt:100
            "toString".toString(): "toString" at CollectionBehaviors.kt:100
            equalityBehavior.propertyEquals("toString", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:100
              getter.invoke(this.expected): "[]" at ComparisonDSL.kt:21
              getter.invoke(this.actual): "[]" at ComparisonDSL.kt:21
                listIterator(): BufferIterator@1 at AbstractPersistentList.kt:60
                  listIterator(0): BufferIterator@1 at AbstractPersistentList.kt:64
                    ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
              assertEquals("[]", "[]", message ➜ "toString") at ComparisonDSL.kt:21
          collectionBehavior(CompareContext@1, "", true) at CollectionBehaviors.kt:10
            "".append(objectName ➜ ""): "" at CollectionBehaviors.kt:105
            objectName.length(): 0 at CollectionBehaviors.kt:105
            "".append(""): "" at CollectionBehaviors.kt:105
            "".toString(): "" at CollectionBehaviors.kt:105
            prefix = "" at CollectionBehaviors.kt:105
            "".append(prefix ➜ ""): "" at CollectionBehaviors.kt:106
            "".append("size"): "size" at CollectionBehaviors.kt:106
            "size".toString(): "size" at CollectionBehaviors.kt:106
            collectionBehavior.propertyEquals("size", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:106
              getter.invoke(this.expected): 0 at ComparisonDSL.kt:21
              getter.invoke(this.actual): 0 at ComparisonDSL.kt:21
              assertEquals(0, 0, message ➜ "size") at ComparisonDSL.kt:21
            "".append(prefix ➜ ""): "" at CollectionBehaviors.kt:107
            "".append("isEmpty"): "isEmpty" at CollectionBehaviors.kt:107
            "isEmpty".toString(): "isEmpty" at CollectionBehaviors.kt:107
            collectionBehavior.propertyEquals("isEmpty", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:107
              getter.invoke(this.expected): true at ComparisonDSL.kt:21
                propertyEquals.isEmpty(): true at CollectionBehaviors.kt:107
              getter.invoke(this.actual): true at ComparisonDSL.kt:21
                propertyEquals.isEmpty(): true at CollectionBehaviors.kt:107
              assertEquals(true, true, message ➜ "isEmpty") at ComparisonDSL.kt:21
            it = CollectionBehaviorsKt$collectionBehavior$3@1 at CollectionBehaviors.kt:109
            i$a$-let-CollectionBehaviorsKt$collectionBehavior$4 = 0 at fake.kt:1
            CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:109
              getter.invoke(this.expected): false at ComparisonDSL.kt:21
                contains(propertyEquals, it): false at CollectionBehaviors.kt:109
              getter.invoke(this.actual): false at ComparisonDSL.kt:21
                contains(propertyEquals, it): false at CollectionBehaviors.kt:109
                  indexOf(element): -1 at AbstractPersistentList.kt:52
                    indexOf(this.buffer, element): -1 at SmallPersistentVector.kt:135
              assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
            CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:110
              getter.invoke(this.expected): false at ComparisonDSL.kt:21
                firstOrNull(propertyEquals): null at CollectionBehaviors.kt:110
                contains(propertyEquals, null): false at CollectionBehaviors.kt:110
              getter.invoke(this.actual): false at ComparisonDSL.kt:21
                firstOrNull(propertyEquals): null at CollectionBehaviors.kt:110
                contains(propertyEquals, null): false at CollectionBehaviors.kt:110
                  indexOf(element): -1 at AbstractPersistentList.kt:52
                    indexOf(this.buffer, element): -1 at SmallPersistentVector.kt:135
              assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
            CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:111
              getter.invoke(this.expected): true at ComparisonDSL.kt:21
                propertyEquals.containsAll(propertyEquals): true at CollectionBehaviors.kt:111
              getter.invoke(this.actual): true at ComparisonDSL.kt:21
                propertyEquals.containsAll(propertyEquals): true at CollectionBehaviors.kt:111
                  all = SmallPersistentVector@1 at AbstractPersistentList.kt:56
                  i$f$all = 0 at AbstractPersistentList.kt:56
                  isEmpty(): true at _Collections.kt:1734
              assertEquals(true, true, message ➜ "") at ComparisonDSL.kt:21
            collectionBehavior.compareProperty(CollectionBehaviorsKt$$Lambda@1, CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:113
              getter.invoke(this.expected): EmptyIterator@1 at ComparisonDSL.kt:27
                compareProperty.iterator(): EmptyIterator@1 at CollectionBehaviors.kt:113
              getter.invoke(this.actual): BufferIterator@1 at ComparisonDSL.kt:27
                compareProperty.iterator(): BufferIterator@1 at CollectionBehaviors.kt:113
                  listIterator(): BufferIterator@1 at AbstractPersistentList.kt:60
                    listIterator(0): BufferIterator@1 at AbstractPersistentList.kt:64
                      ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
              compare(EmptyIterator@1, BufferIterator@1, block) at ComparisonDSL.kt:27
                block.invoke(CompareContext@1): Unit at ComparisonDSL.kt:12
                  iteratorBehavior(compareProperty) at CollectionBehaviors.kt:113
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:55
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:55
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:55
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    iteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:57
                    EmptyIterator@1.hasNext(): false at CollectionBehaviors.kt:57
                    iteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:61
                      CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                        expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                          getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                            propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:61
                        createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                        Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                        checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                        expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                        actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                          getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                            propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:61
                              hasNext(): false at BufferIterator.kt:14
                        createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                        Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                        checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                        actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                        assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                          expected.getClass(): Class@1 at testUtilsJvm.kt:11
                          actual.getClass(): Class@1 at testUtilsJvm.kt:11
                          assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          listBehavior.compareProperty(CollectionBehaviorsKt$$Lambda@1, CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:11
            getter.invoke(this.expected): EmptyIterator@1 at ComparisonDSL.kt:27
              compareProperty.listIterator(): EmptyIterator@1 at CollectionBehaviors.kt:11
            getter.invoke(this.actual): BufferIterator@1 at ComparisonDSL.kt:27
              compareProperty.listIterator(): BufferIterator@1 at CollectionBehaviors.kt:11
                listIterator(0): BufferIterator@1 at AbstractPersistentList.kt:64
                  ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
            compare(EmptyIterator@1, BufferIterator@1, block) at ComparisonDSL.kt:27
              block.invoke(CompareContext@1): Unit at ComparisonDSL.kt:12
                listIteratorBehavior(compareProperty) at CollectionBehaviors.kt:11
                  listIteratorProperties(listIteratorBehavior) at CollectionBehaviors.kt:32
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:48
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:48
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:48
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:49
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasPrevious(): false at CollectionBehaviors.kt:49
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasPrevious(): false at CollectionBehaviors.kt:49
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:50
                      getter.invoke(this.expected): 0 at ComparisonDSL.kt:21
                        propertyEquals.nextIndex(): 0 at CollectionBehaviors.kt:50
                      getter.invoke(this.actual): 0 at ComparisonDSL.kt:21
                        propertyEquals.nextIndex(): 0 at CollectionBehaviors.kt:50
                      assertEquals(0, 0, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:51
                      getter.invoke(this.expected): -1 at ComparisonDSL.kt:21
                        propertyEquals.previousIndex(): -1 at CollectionBehaviors.kt:51
                      getter.invoke(this.actual): -1 at ComparisonDSL.kt:21
                        propertyEquals.previousIndex(): -1 at CollectionBehaviors.kt:51
                      assertEquals(-1, -1, message ➜ "") at ComparisonDSL.kt:21
                  listIteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:34
                  EmptyIterator@1.hasNext(): false at CollectionBehaviors.kt:34
                  listIteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:38
                    CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                      expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                        getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:38
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                      expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                      actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                        getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:38
                            hasNext(): false at BufferIterator.kt:14
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                      actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                      assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                        expected.getClass(): Class@1 at testUtilsJvm.kt:11
                        actual.getClass(): Class@1 at testUtilsJvm.kt:11
                        assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
                  listIteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:40
                  EmptyIterator@1.hasPrevious(): false at CollectionBehaviors.kt:40
                  listIteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:44
                    CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                      expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                        getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.previous(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:44
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                      expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                      actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                        getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.previous(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:44
                            hasPrevious(): false at BufferIterator.kt:21
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                      actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                      assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                        expected.getClass(): Class@1 at testUtilsJvm.kt:11
                        actual.getClass(): Class@1 at testUtilsJvm.kt:11
                        assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          listBehavior.compareProperty(CollectionBehaviorsKt$$Lambda@1, CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:12
            getter.invoke(this.expected): EmptyIterator@1 at ComparisonDSL.kt:27
              compareProperty.listIterator(0): EmptyIterator@1 at CollectionBehaviors.kt:12
            getter.invoke(this.actual): BufferIterator@1 at ComparisonDSL.kt:27
              compareProperty.listIterator(0): BufferIterator@1 at CollectionBehaviors.kt:12
                ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
            compare(EmptyIterator@1, BufferIterator@1, block) at ComparisonDSL.kt:27
              block.invoke(CompareContext@1): Unit at ComparisonDSL.kt:12
                listIteratorBehavior(compareProperty) at CollectionBehaviors.kt:12
                  listIteratorProperties(listIteratorBehavior) at CollectionBehaviors.kt:32
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:48
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:48
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:48
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:49
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasPrevious(): false at CollectionBehaviors.kt:49
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasPrevious(): false at CollectionBehaviors.kt:49
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:50
                      getter.invoke(this.expected): 0 at ComparisonDSL.kt:21
                        propertyEquals.nextIndex(): 0 at CollectionBehaviors.kt:50
                      getter.invoke(this.actual): 0 at ComparisonDSL.kt:21
                        propertyEquals.nextIndex(): 0 at CollectionBehaviors.kt:50
                      assertEquals(0, 0, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:51
                      getter.invoke(this.expected): -1 at ComparisonDSL.kt:21
                        propertyEquals.previousIndex(): -1 at CollectionBehaviors.kt:51
                      getter.invoke(this.actual): -1 at ComparisonDSL.kt:21
                        propertyEquals.previousIndex(): -1 at CollectionBehaviors.kt:51
                      assertEquals(-1, -1, message ➜ "") at ComparisonDSL.kt:21
                  listIteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:34
                  EmptyIterator@1.hasNext(): false at CollectionBehaviors.kt:34
                  listIteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:38
                    CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                      expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                        getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:38
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                      expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                      actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                        getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:38
                            hasNext(): false at BufferIterator.kt:14
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                      actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                      assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                        expected.getClass(): Class@1 at testUtilsJvm.kt:11
                        actual.getClass(): Class@1 at testUtilsJvm.kt:11
                        assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
                  listIteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:40
                  EmptyIterator@1.hasPrevious(): false at CollectionBehaviors.kt:40
                  listIteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:44
                    CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                      expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                        getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.previous(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:44
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                      expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                      actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                        getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.previous(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:44
                            hasPrevious(): false at BufferIterator.kt:21
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                      actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                      assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                        expected.getClass(): Class@1 at testUtilsJvm.kt:11
                        actual.getClass(): Class@1 at testUtilsJvm.kt:11
                        assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          listBehavior.compareProperty(CollectionBehaviorsKt$$Lambda@1, CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:13
            getter.invoke(this.expected): EmptyIterator@1 at ComparisonDSL.kt:27
              compareProperty.listIterator(0): EmptyIterator@1 at CollectionBehaviors.kt:13
            getter.invoke(this.actual): BufferIterator@1 at ComparisonDSL.kt:27
              compareProperty.listIterator(0): BufferIterator@1 at CollectionBehaviors.kt:13
                ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 0, 0) at SmallPersistentVector.kt:143
            compare(EmptyIterator@1, BufferIterator@1, block) at ComparisonDSL.kt:27
              block.invoke(CompareContext@1): Unit at ComparisonDSL.kt:12
                listIteratorBehavior(compareProperty) at CollectionBehaviors.kt:13
                  listIteratorProperties(listIteratorBehavior) at CollectionBehaviors.kt:32
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:48
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:48
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasNext(): false at CollectionBehaviors.kt:48
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:49
                      getter.invoke(this.expected): false at ComparisonDSL.kt:21
                        propertyEquals.hasPrevious(): false at CollectionBehaviors.kt:49
                      getter.invoke(this.actual): false at ComparisonDSL.kt:21
                        propertyEquals.hasPrevious(): false at CollectionBehaviors.kt:49
                      assertEquals(false, false, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:50
                      getter.invoke(this.expected): 0 at ComparisonDSL.kt:21
                        propertyEquals.nextIndex(): 0 at CollectionBehaviors.kt:50
                      getter.invoke(this.actual): 0 at ComparisonDSL.kt:21
                        propertyEquals.nextIndex(): 0 at CollectionBehaviors.kt:50
                      assertEquals(0, 0, message ➜ "") at ComparisonDSL.kt:21
                    CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:51
                      getter.invoke(this.expected): -1 at ComparisonDSL.kt:21
                        propertyEquals.previousIndex(): -1 at CollectionBehaviors.kt:51
                      getter.invoke(this.actual): -1 at ComparisonDSL.kt:21
                        propertyEquals.previousIndex(): -1 at CollectionBehaviors.kt:51
                      assertEquals(-1, -1, message ➜ "") at ComparisonDSL.kt:21
                  listIteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:34
                  EmptyIterator@1.hasNext(): false at CollectionBehaviors.kt:34
                  listIteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:38
                    CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                      expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                        getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:38
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                      expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                      actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                        getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.next(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:38
                            hasNext(): false at BufferIterator.kt:14
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                      actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                      assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                        expected.getClass(): Class@1 at testUtilsJvm.kt:11
                        actual.getClass(): Class@1 at testUtilsJvm.kt:11
                        assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
                  listIteratorBehavior.getExpected(): EmptyIterator@1 at CollectionBehaviors.kt:40
                  EmptyIterator@1.hasPrevious(): false at CollectionBehaviors.kt:40
                  listIteratorBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:44
                    CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
                      expected.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:31
                        getter.invoke(this$0.expected): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.previous(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:44
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:31
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:31
                      expectedFail = NoSuchElementException@1 at ComparisonDSL.kt:31
                      actual.invoke(): threw java.util.NoSuchElementException at ComparisonDSL.kt:32
                        getter.invoke(this$0.actual): threw java.util.NoSuchElementException at ComparisonDSL.kt:23
                          propertyFails.previous(): threw java.util.NoSuchElementException at CollectionBehaviors.kt:44
                            hasPrevious(): false at BufferIterator.kt:21
                      createFailure(NoSuchElementException@1): Result.Failure@1 at ComparisonDSL.kt:32
                      Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
                      checkResultIsFailure(null, Result.Failure@1): NoSuchElementException@1 at ComparisonDSL.kt:32
                      actualFail = NoSuchElementException@1 at ComparisonDSL.kt:32
                      assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                        expected.getClass(): Class@1 at testUtilsJvm.kt:11
                        actual.getClass(): Class@1 at testUtilsJvm.kt:11
                        assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          listBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:15
            CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
              expected.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:31
                getter.invoke(this$0.expected): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.listIterator(-1): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:15
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:31
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              expectedFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              actual.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:32
                getter.invoke(this$0.actual): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.listIterator(-1): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:15
                    ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ -1, 0): threw java.lang.IndexOutOfBoundsException at SmallPersistentVector.kt:143
                      "".append("index: "): "index: " at ListImplementation.kt:22
                      "index: ".append(index ➜ -1): "index: -1" at ListImplementation.kt:22
                      "index: -1".append(", size: "): "index: -1, size: " at ListImplementation.kt:22
                      "index: -1, size: ".append(size ➜ 0): "index: -1, size: 0" at ListImplementation.kt:22
                      "index: -1, size: 0".toString(): "index: -1, size: 0" at ListImplementation.kt:22
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:32
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              actualFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                expected.getClass(): Class@1 at testUtilsJvm.kt:11
                actual.getClass(): Class@1 at testUtilsJvm.kt:11
                assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          listBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:16
            CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
              expected.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:31
                getter.invoke(this$0.expected): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.listIterator(1): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:16
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:31
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              expectedFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              actual.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:32
                getter.invoke(this$0.actual): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.listIterator(1): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:16
                    ListImplementation.checkPositionIndex$kotlinx_collections_immutable(index ➜ 1, 0): threw java.lang.IndexOutOfBoundsException at SmallPersistentVector.kt:143
                      "".append("index: "): "index: " at ListImplementation.kt:22
                      "index: ".append(index ➜ 1): "index: 1" at ListImplementation.kt:22
                      "index: 1".append(", size: "): "index: 1, size: " at ListImplementation.kt:22
                      "index: 1, size: ".append(size ➜ 0): "index: 1, size: 0" at ListImplementation.kt:22
                      "index: 1, size: 0".toString(): "index: 1, size: 0" at ListImplementation.kt:22
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:32
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              actualFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                expected.getClass(): Class@1 at testUtilsJvm.kt:11
                actual.getClass(): Class@1 at testUtilsJvm.kt:11
                assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          index = 0 at CollectionBehaviors.kt:18
          listBehavior.getExpected(): EmptyList@1 at CollectionBehaviors.kt:18
          this_ = CompareContext@1 at CollectionBehaviors.kt:21
          getter = CollectionBehaviorsKt$$Lambda@1 at CollectionBehaviors.kt:21
          i$f$propertyFailsWith = 0 at CollectionBehaviors.kt:21
          propertyFailsWith(CollectionBehaviorsKt$listBehavior$$inlined$propertyFailsWith$1.INSTANCE, getter) at ComparisonDSL.kt:24
            assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, exceptionPredicate) at ComparisonDSL.kt:25
              expected.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:31
                getter.invoke(this$0.expected): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:25
                  propertyFailsWith.get(0): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:21
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:31
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              expectedFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              actual.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:32
                getter.invoke(this$0.actual): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:25
                  propertyFailsWith.get(0): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:21
                    ListImplementation.checkElementIndex$kotlinx_collections_immutable(index ➜ 0, 0): threw java.lang.IndexOutOfBoundsException at SmallPersistentVector.kt:150
                      "".append("index: "): "index: " at ListImplementation.kt:15
                      "index: ".append(index ➜ 0): "index: 0" at ListImplementation.kt:15
                      "index: 0".append(", size: "): "index: 0, size: " at ListImplementation.kt:15
                      "index: 0, size: ".append(size ➜ 0): "index: 0, size: 0" at ListImplementation.kt:15
                      "index: 0, size: 0".toString(): "index: 0, size: 0" at ListImplementation.kt:15
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:32
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              actualFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              exceptionPredicate.invoke(expectedFail): true at ComparisonDSL.kt:35
                invoke(p1): true at ComparisonDSL.kt:24
              assertTrue(true, "expected fail") at ComparisonDSL.kt:35
              exceptionPredicate.invoke(actualFail): true at ComparisonDSL.kt:36
                invoke(p1): true at ComparisonDSL.kt:24
              assertTrue(true, "actual fail") at ComparisonDSL.kt:36
          CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:23
            getter.invoke(this.expected): -1 at ComparisonDSL.kt:21
              getOrNull(propertyEquals, 0): null at CollectionBehaviors.kt:23
              indexOf(propertyEquals, null): -1 at CollectionBehaviors.kt:23
            getter.invoke(this.actual): -1 at ComparisonDSL.kt:21
              getOrNull(propertyEquals, 0): null at CollectionBehaviors.kt:23
              indexOf(propertyEquals, null): -1 at CollectionBehaviors.kt:23
                indexOf(this.buffer, element): -1 at SmallPersistentVector.kt:135
            assertEquals(-1, -1, message ➜ "") at ComparisonDSL.kt:21
          CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:24
            getter.invoke(this.expected): -1 at ComparisonDSL.kt:21
              getOrNull(propertyEquals, 0): null at CollectionBehaviors.kt:24
              lastIndexOf(propertyEquals, null): -1 at CollectionBehaviors.kt:24
            getter.invoke(this.actual): -1 at ComparisonDSL.kt:21
              getOrNull(propertyEquals, 0): null at CollectionBehaviors.kt:24
              lastIndexOf(propertyEquals, null): -1 at CollectionBehaviors.kt:24
                lastIndexOf(this.buffer, element): -1 at SmallPersistentVector.kt:139
            assertEquals(-1, -1, message ➜ "") at ComparisonDSL.kt:21
          listBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:26
            CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
              expected.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:31
                getter.invoke(this$0.expected): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.subList(0, 1): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:26
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:31
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              expectedFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              actual.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:32
                getter.invoke(this$0.actual): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.subList(0, 1): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:26
                    subList(fromIndex ➜ 0, toIndex ➜ 1): threw java.lang.IndexOutOfBoundsException at AbstractPersistentList.kt:13
                      PersistentList.DefaultImpls.subList(this, fromIndex ➜ 0, toIndex ➜ 1): threw java.lang.IndexOutOfBoundsException at AbstractPersistentList.kt:15
                        ImmutableList.DefaultImpls.subList(this, fromIndex ➜ 0, toIndex ➜ 1): threw java.lang.IndexOutOfBoundsException at ImmutableList.kt:62
                          "".append("fromIndex: "): "fromIndex: " at ListImplementation.kt:29
                          "fromIndex: ".append(fromIndex ➜ 0): "fromIndex: 0" at ListImplementation.kt:29
                          "fromIndex: 0".append(", toIndex: "): "fromIndex: 0, toIndex: " at ListImplementation.kt:29
                          "fromIndex: 0, toIndex: ".append(toIndex ➜ 1): "fromIndex: 0, toIndex: 1" at ListImplementation.kt:29
                          "fromIndex: 0, toIndex: 1".append(", size: "): "fromIndex: 0, toIndex: 1, size: " at ListImplementation.kt:29
                          "fromIndex: 0, toIndex: 1, size: ".append(size ➜ 0): "fromIndex: 0, toIndex: 1, size: 0" at ListImplementation.kt:29
                          "fromIndex: 0, toIndex: 1, size: 0".toString(): "fromIndex: 0, toIndex: 1, size: 0" at ListImplementation.kt:29
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:32
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              actualFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                expected.getClass(): Class@1 at testUtilsJvm.kt:11
                actual.getClass(): Class@1 at testUtilsJvm.kt:11
                assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          listBehavior.propertyFails(CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:27
            CompareContext@1.assertFailEquals(CompareContext$$Lambda@1, CompareContext$$Lambda@1, null) at ComparisonDSL.kt:23
              expected.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:31
                getter.invoke(this$0.expected): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.subList(-1, 0): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:27
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:31
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:31
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              expectedFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:31
              actual.invoke(): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:32
                getter.invoke(this$0.actual): threw java.lang.IndexOutOfBoundsException at ComparisonDSL.kt:23
                  propertyFails.subList(-1, 0): threw java.lang.IndexOutOfBoundsException at CollectionBehaviors.kt:27
                    subList(fromIndex ➜ -1, toIndex ➜ 0): threw java.lang.IndexOutOfBoundsException at AbstractPersistentList.kt:13
                      PersistentList.DefaultImpls.subList(this, fromIndex ➜ -1, toIndex ➜ 0): threw java.lang.IndexOutOfBoundsException at AbstractPersistentList.kt:15
                        ImmutableList.DefaultImpls.subList(this, fromIndex ➜ -1, toIndex ➜ 0): threw java.lang.IndexOutOfBoundsException at ImmutableList.kt:62
                          "".append("fromIndex: "): "fromIndex: " at ListImplementation.kt:29
                          "fromIndex: ".append(fromIndex ➜ -1): "fromIndex: -1" at ListImplementation.kt:29
                          "fromIndex: -1".append(", toIndex: "): "fromIndex: -1, toIndex: " at ListImplementation.kt:29
                          "fromIndex: -1, toIndex: ".append(toIndex ➜ 0): "fromIndex: -1, toIndex: 0" at ListImplementation.kt:29
                          "fromIndex: -1, toIndex: 0".append(", size: "): "fromIndex: -1, toIndex: 0, size: " at ListImplementation.kt:29
                          "fromIndex: -1, toIndex: 0, size: ".append(size ➜ 0): "fromIndex: -1, toIndex: 0, size: 0" at ListImplementation.kt:29
                          "fromIndex: -1, toIndex: 0, size: 0".toString(): "fromIndex: -1, toIndex: 0, size: 0" at ListImplementation.kt:29
              createFailure(IndexOutOfBoundsException@1): Result.Failure@1 at ComparisonDSL.kt:32
              Result.constructor-impl(Result.Failure@1): Result.Failure@1 at ComparisonDSL.kt:32
              checkResultIsFailure(null, Result.Failure@1): IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              actualFail = IndexOutOfBoundsException@1 at ComparisonDSL.kt:32
              assertTypeEquals(expectedFail, actualFail) at ComparisonDSL.kt:39
                expected.getClass(): Class@1 at testUtilsJvm.kt:11
                actual.getClass(): Class@1 at testUtilsJvm.kt:11
                assertEquals$default(Class@1, Class@1, null, 4, null) at testUtilsJvm.kt:11
          CompareContext@1.propertyEquals("", CollectionBehaviorsKt$$Lambda@1) at CollectionBehaviors.kt:28
            getter.invoke(this.expected): EmptyList@1 at ComparisonDSL.kt:21
              propertyEquals.subList(0, 0): EmptyList@1 at CollectionBehaviors.kt:28
            getter.invoke(this.actual): ImmutableList.SubList@1 at ComparisonDSL.kt:21
              propertyEquals.subList(0, 0): ImmutableList.SubList@1 at CollectionBehaviors.kt:28
                subList(fromIndex ➜ 0, toIndex ➜ 0): ImmutableList.SubList@1 at AbstractPersistentList.kt:13
                  PersistentList.DefaultImpls.subList(this, fromIndex ➜ 0, toIndex ➜ 0): ImmutableList.SubList@1 at AbstractPersistentList.kt:15
                    ImmutableList.DefaultImpls.subList(this, fromIndex ➜ 0, toIndex ➜ 0): ImmutableList.SubList@1 at ImmutableList.kt:62
            assertEquals(EmptyList@1, ImmutableList.SubList@1, message ➜ "") at ComparisonDSL.kt:21
