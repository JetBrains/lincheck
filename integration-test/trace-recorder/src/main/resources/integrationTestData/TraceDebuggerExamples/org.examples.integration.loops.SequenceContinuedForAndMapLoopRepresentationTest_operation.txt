# Thread 1
SequenceContinuedForAndMapLoopRepresentationTest.operation() at :0
  escape = "START" at SequenceContinuedForAndMapLoopRepresentationTest.kt:17
  Integer;@1[0] = 1 at SequenceContinuedForAndMapLoopRepresentationTest.kt:18
  Integer;@1[1] = 2 at SequenceContinuedForAndMapLoopRepresentationTest.kt:18
  Integer;@1[2] = 3 at SequenceContinuedForAndMapLoopRepresentationTest.kt:18
  Integer;@1[3] = 4 at SequenceContinuedForAndMapLoopRepresentationTest.kt:18
  sequenceOf(Integer;@1): ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1@1 at SequenceContinuedForAndMapLoopRepresentationTest.kt:18
  seq = ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1@1 at SequenceContinuedForAndMapLoopRepresentationTest.kt:18
  map(seq, SequenceContinuedForAndMapLoopRepresentationTest$$Lambda@1): TransformingSequence@1 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
  TransformingSequence@1.iterator(): TransformingSequence$iterator$1@1 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
  loop(5 iterations) at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
    <iteration 1> at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.hasNext(): true at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.next(): 2 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      i = 2 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      a = 2 at SequenceContinuedForAndMapLoopRepresentationTest.kt:20
      a.toString(): "2" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
      escape = "2" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
      escape = "2 is saved" at SequenceContinuedForAndMapLoopRepresentationTest.kt:25
    <iteration 2> at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.hasNext(): true at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.next(): 4 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      i = 4 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      a = 4 at SequenceContinuedForAndMapLoopRepresentationTest.kt:20
      a.toString(): "4" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
      escape = "4" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
    <iteration 3> at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.hasNext(): true at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.next(): 6 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      i = 6 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      a = 6 at SequenceContinuedForAndMapLoopRepresentationTest.kt:20
      a.toString(): "6" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
      escape = "6" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
    <iteration 4> at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.hasNext(): true at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.next(): 8 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      i = 8 at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      a = 8 at SequenceContinuedForAndMapLoopRepresentationTest.kt:20
      a.toString(): "8" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
      escape = "8" at SequenceContinuedForAndMapLoopRepresentationTest.kt:21
    <iteration 5> at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
      TransformingSequence$iterator$1@1.hasNext(): false at SequenceContinuedForAndMapLoopRepresentationTest.kt:19
  escape = "END" at SequenceContinuedForAndMapLoopRepresentationTest.kt:27
