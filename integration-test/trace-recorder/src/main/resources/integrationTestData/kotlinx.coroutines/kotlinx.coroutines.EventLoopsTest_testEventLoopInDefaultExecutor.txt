# Thread 1 (Test worker)
EventLoopsTest.testEventLoopInDefaultExecutor() at :0
  TestBase.runTest$default(EventLoopsTest@1, null, null, EventLoopsTest$testEventLoopInDefaultExecutor$1@1, 3, null) at EventLoopsTest.kt:53
    CollectionsKt.emptyList(): EmptyList@1 at TestBase.kt:200
    EventLoopsTest@1.runTest(null, EmptyList@1, EventLoopsTest$testEventLoopInDefaultExecutor$1@1) at TestBase.kt:117
      exCount = IntRef@1 at TestBase.kt:122
      ex = null at TestBase.kt:123
      i$f$CoroutineExceptionHandler = 0 at TestBase.kt:125
      .CoroutineExceptionHandler() at TestBase.kt:125
      BuildersKt.runBlocking(TestBase$runTest$$inlined$CoroutineExceptionHandler$1@1, EventLoopsTest$testEventLoopInDefaultExecutor$1@1): Unit at TestBase.kt:125
        BuildersKt__BuildersKt.runBlocking(TestBase$runTest$$inlined$CoroutineExceptionHandler$1@1, EventLoopsTest$testEventLoopInDefaultExecutor$1@1): Unit at :1
          Thread.currentThread(): Thread@1 at Builders.kt:53
          currentThread = Thread@1 at Builders.kt:53
          context.get(ContinuationInterceptor.Key@1): null at Builders.kt:54
          contextInterceptor = null at Builders.kt:54
          eventLoop = null at Builders.kt:55
          newContext = null at Builders.kt:56
          ThreadLocalEventLoop.INSTANCE.getEventLoop(): BlockingEventLoop@1 at Builders.kt:59
          eventLoop = BlockingEventLoop@1 at Builders.kt:59
          context.plus(BlockingEventLoop@1): CombinedContext@1 at Builders.kt:60
          CoroutineContextKt.newCoroutineContext(GlobalScope@1, CombinedContext@1): CombinedContext@1 at Builders.kt:60
            newCoroutineContext.getCoroutineContext(): EmptyCoroutineContext@1 at CoroutineContext.kt:15
            CoroutineContextKt.foldCopies(EmptyCoroutineContext@1, CombinedContext@1, true): CombinedContext@1 at CoroutineContext.kt:15
              CoroutineContextKt.hasCopyableElements(EmptyCoroutineContext@1): false at CoroutineContext.kt:50
                hasCopyableElements.fold(false, CoroutineContextKt$$Lambda@1): false at CoroutineContext.kt:36
              hasElementsLeft = 0 at CoroutineContext.kt:50
              CoroutineContextKt.hasCopyableElements(CombinedContext@1): false at CoroutineContext.kt:51
                hasCopyableElements.fold(false, CoroutineContextKt$$Lambda@1): false at CoroutineContext.kt:36
              hasElementsRight = 0 at CoroutineContext.kt:51
              originalContext.plus(CombinedContext@1): CombinedContext@1 at CoroutineContext.kt:55
            combined = CombinedContext@1 at CoroutineContext.kt:15
            DebugKt.getDEBUG(): true at CoroutineContext.kt:16
            DebugKt.getCOROUTINE_ID(): AtomicLong@1 at CoroutineContext.kt:16
            AtomicLong@1.incrementAndGet(): 1 at CoroutineContext.kt:16
            combined.plus(CoroutineId@1): CombinedContext@1 at CoroutineContext.kt:16
            debug = CombinedContext@1 at CoroutineContext.kt:16
            Dispatchers.getDefault(): DefaultScheduler@1 at CoroutineContext.kt:17
            combined.get(ContinuationInterceptor.Key@1): BlockingEventLoop@1 at CoroutineContext.kt:17
          newContext = CombinedContext@1 at Builders.kt:60
          DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:142
          i$a$-assert-JobSupport$initParentJob$1 = 0 at fake.kt:1
          getParentHandle(): null at JobSupport.kt:142
            JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
            AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): null at JobSupport.kt:129
          setParentHandle(NonDisposableHandle@1) at JobSupport.kt:144
            JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
            AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(BlockingCoroutine@1, NonDisposableHandle@1) at JobSupport.kt:130
          Job.DefaultImpls.fold(BlockingCoroutine@1, CombinedContext@1, CoroutineContext.DefaultImpls$$Lambda@1): CombinedContext@1 at JobSupport.kt:22
            CoroutineContext.Element.DefaultImpls.fold(BlockingCoroutine@1, CombinedContext@1, CoroutineContext.DefaultImpls$$Lambda@1): CombinedContext@1 at Job.kt:118
          coroutine = BlockingCoroutine@1 at Builders.kt:68
          coroutine.start(CoroutineStart.DEFAULT, BlockingCoroutine@1, EventLoopsTest$testEventLoopInDefaultExecutor$1@1) at Builders.kt:69
            start.invoke(EventLoopsTest$testEventLoopInDefaultExecutor$1@1, BlockingCoroutine@1, BlockingCoroutine@1) at AbstractCoroutine.kt:134
              continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
              this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:278
              i$f$resumeCancellableWith$kotlinx_coroutines_core = 0 at DispatchedContinuation.kt:278
              DispatchedContinuation@1.resumeCancellableWith() at DispatchedContinuation.kt:278
                CompletionStateKt.toState(Unit): Unit at DispatchedContinuation.kt:207
                  Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                state = Unit at DispatchedContinuation.kt:207
                getContext(): CombinedContext@1 at DispatchedContinuation.kt:208
                  continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                DispatchedContinuationKt.safeIsDispatchNeeded(BlockingEventLoop@1, CombinedContext@1): true at DispatchedContinuation.kt:208
                  safeIsDispatchNeeded.isDispatchNeeded(CombinedContext@1): true at DispatchedContinuation.kt:262
                _state = Unit at DispatchedContinuation.kt:209
                resumeMode = 1 at DispatchedContinuation.kt:210
                getContext(): CombinedContext@1 at DispatchedContinuation.kt:211
                  continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                DispatchedContinuationKt.safeDispatch(BlockingEventLoop@1, CombinedContext@1, DispatchedContinuation@1) at DispatchedContinuation.kt:211
                  safeDispatch.dispatch(CombinedContext@1, DispatchedContinuation@1) at DispatchedContinuation.kt:254
          coroutine.joinBlocking(): Unit at Builders.kt:70
            AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:89
            BlockingEventLoop@1.incrementUseCount(false) at Builders.kt:91
              delta(false): 1 at EventLoop.common.kt:100
              useCount = 1 at EventLoop.common.kt:100
              shared = true at EventLoop.common.kt:101
            eventLoop.processNextEvent(): 0 at Builders.kt:94
              updateThreadContext(CombinedContext@1): "Test worker" at CoroutineContext.kt:289
                context.get(CoroutineName.Key@1): null at CoroutineContext.kt:300
                  ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, CoroutineName.Key@1): null at CoroutineDispatcher.kt:60
                  Job.DefaultImpls.get(BlockingCoroutine@1, CoroutineName.Key@1): null at JobSupport.kt:22
                    CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, CoroutineName.Key@1): null at Job.kt:118
                coroutineName = "coroutine" at CoroutineContext.kt:300
                Thread.currentThread(): Thread@1 at CoroutineContext.kt:301
                currentThread = Thread@1 at CoroutineContext.kt:301
                currentThread.getName(): "Test worker" at CoroutineContext.kt:302
                oldName = "Test worker" at CoroutineContext.kt:302
                lastIndex = 0 at CoroutineContext.kt:303
                StringsKt.lastIndexOf$default("Test worker", " @", 0, false, 6, null): -1 at CoroutineContext.kt:303
                lastIndex = -1 at CoroutineContext.kt:303
                lastIndex = 11 at CoroutineContext.kt:304
                updateThreadContext_u24lambda_u240 = "" at CoroutineContext.kt:305
                i$a$-buildString-CoroutineId$updateThreadContext$1 = 0 at CoroutineContext.kt:305
                updateThreadContext_u24lambda_u240.append("Test worker"): "Test worker" at CoroutineContext.kt:306
                updateThreadContext_u24lambda_u240.append(" @"): "Test worker @" at CoroutineContext.kt:307
                updateThreadContext_u24lambda_u240.append("coroutine"): "Test worker @coroutine" at CoroutineContext.kt:308
                updateThreadContext_u24lambda_u240.append('#'): "Test worker @coroutine#" at CoroutineContext.kt:309
                updateThreadContext_u24lambda_u240.append(1): "Test worker @coroutine#1" at CoroutineContext.kt:310
                "Test worker @coroutine#1".toString(): "Test worker @coroutine#1" at CoroutineContext.kt:305
                currentThread.setName("Test worker @coroutine#1") at CoroutineContext.kt:305
              context.get(UndispatchedMarker@1): null at CoroutineContext.kt:134
                ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, UndispatchedMarker@1): null at CoroutineDispatcher.kt:60
                Job.DefaultImpls.get(BlockingCoroutine@1, UndispatchedMarker@1): null at JobSupport.kt:22
                  CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, UndispatchedMarker@1): null at Job.kt:118
              potentiallyHasUndispatchedCoroutine = 0 at CoroutineContext.kt:134
              state = Unit at DispatchedContinuation.kt:179
              DebugKt.getASSERTIONS_ENABLED(): true at DispatchedContinuation.kt:180
              i$a$-assert-DispatchedContinuation$takeState$1 = 0 at fake.kt:1
              DispatchedContinuationKt.access$getUNDEFINED$p(): Symbol@1 at DispatchedContinuation.kt:180
              DispatchedContinuationKt.access$getUNDEFINED$p(): Symbol@1 at DispatchedContinuation.kt:181
              _state = Symbol@1 at DispatchedContinuation.kt:181
              ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, Job.Key@1): null at CoroutineDispatcher.kt:60
              Job.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at JobSupport.kt:22
                CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at Job.kt:118
              isActive(): true at AbstractCoroutine.kt:64
                getState(): Empty@1 at JobSupport.kt:175
                  JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                  AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                state = Empty@1 at JobSupport.kt:175
                state.isActive(): true at JobSupport.kt:176
              ResultKt.throwOnFailure(Unit) at EventLoopsTest.kt:53
              expect(1) at EventLoopsTest.kt:54
                orderedExecutionDelegate.expect(1) at TestBase.common.kt:193
              Dispatchers.getUnconfined(): Unconfined@1 at EventLoopsTest.kt:55
              label = 1 at EventLoopsTest.kt:55
              BuildersKt.withContext(Unconfined@1, EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1, EventLoopsTest$testEventLoopInDefaultExecutor$1@1): CoroutineSingletons.COROUTINE_SUSPENDED at EventLoopsTest.kt:55
                BuildersKt__Builders_commonKt.withContext(Unconfined@1, EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1, EventLoopsTest$testEventLoopInDefaultExecutor$1@1): CoroutineSingletons.COROUTINE_SUSPENDED at :1
                  uCont = EventLoopsTest$testEventLoopInDefaultExecutor$1@1 at Builders.common.kt:147
                  i$a$-suspendCoroutineUninterceptedOrReturn-BuildersKt__Builders_commonKt$withContext$2 = 0 at Builders.common.kt:147
                  uCont.getContext(): CombinedContext@1 at Builders.common.kt:149
                  oldContext = CombinedContext@1 at Builders.common.kt:149
                  CoroutineContextKt.newCoroutineContext(CombinedContext@1, Unconfined@1): CombinedContext@1 at Builders.common.kt:151
                    CoroutineContextKt.hasCopyableElements(Unconfined@1): false at CoroutineContext.kt:31
                      hasCopyableElements.fold(false, CoroutineContextKt$$Lambda@1): false at CoroutineContext.kt:36
                    newCoroutineContext.plus(Unconfined@1): CombinedContext@1 at CoroutineContext.kt:31
                      ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, ContinuationInterceptor.Key@1): BlockingEventLoop@1 at CoroutineDispatcher.kt:60
                      Job.DefaultImpls.get(BlockingCoroutine@1, ContinuationInterceptor.Key@1): null at JobSupport.kt:22
                        CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, ContinuationInterceptor.Key@1): null at Job.kt:118
                  newContext = CombinedContext@1 at Builders.common.kt:151
                  JobKt.ensureActive(CombinedContext@1) at Builders.common.kt:153
                    JobKt__JobKt.ensureActive(CombinedContext@1) at :1
                      ensureActive.get(Job.Key@1): BlockingCoroutine@1 at Job.kt:603
                        ContinuationInterceptor.DefaultImpls.get(Unconfined@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                        Job.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at JobSupport.kt:22
                          CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at Job.kt:118
                      JobKt.ensureActive(BlockingCoroutine@1) at Job.kt:603
                        JobKt__JobKt.ensureActive(BlockingCoroutine@1) at :1
                          ensureActive.isActive(): true at Job.kt:585
                            isActive(): true at AbstractCoroutine.kt:64
                              getState(): Empty@1 at JobSupport.kt:175
                                JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                              state = Empty@1 at JobSupport.kt:175
                              state.isActive(): true at JobSupport.kt:176
                  newContext.get(ContinuationInterceptor.Key@1): Unconfined@1 at Builders.common.kt:161
                    ContinuationInterceptor.DefaultImpls.get(Unconfined@1, ContinuationInterceptor.Key@1): Unconfined@1 at CoroutineDispatcher.kt:60
                  oldContext.get(ContinuationInterceptor.Key@1): BlockingEventLoop@1 at Builders.common.kt:161
                    ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, ContinuationInterceptor.Key@1): BlockingEventLoop@1 at CoroutineDispatcher.kt:60
                  ContinuationInterceptor.DefaultImpls.get(Unconfined@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                  Job.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at JobSupport.kt:22
                    CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at Job.kt:118
                  DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:142
                  i$a$-assert-JobSupport$initParentJob$1 = 0 at fake.kt:1
                  getParentHandle(): null at JobSupport.kt:142
                    JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): null at JobSupport.kt:129
                  parent.start(): false at JobSupport.kt:147
                    this_ = BlockingCoroutine@1 at JobSupport.kt:377
                    i$f$loopOnState = 0 at JobSupport.kt:377
                    getState(): Empty@1 at JobSupport.kt:170
                      JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                      AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                    state = Empty@1 at JobSupport.kt:170
                    i$a$-loopOnState-JobSupport$start$1 = 0 at JobSupport.kt:170
                    startInternal(Empty@1): 0 at JobSupport.kt:378
                      state.isActive(): true at JobSupport.kt:392
                  parent.attachChild(DispatchedCoroutine@1): ChildHandleNode@1 at JobSupport.kt:148
                    added = ChildHandleNode@1 at JobSupport.kt:1022
                    it = ChildHandleNode@1 at JobSupport.kt:1022
                    i$a$-also-JobSupport$attachChild$node$1 = 0 at fake.kt:1
                    it.setJob(BlockingCoroutine@1) at JobSupport.kt:1022
                      job = BlockingCoroutine@1 at JobSupport.kt:1464
                    node = ChildHandleNode@1 at JobSupport.kt:1022
                    this_$iv = BlockingCoroutine@1 at JobSupport.kt:536
                    i$f$loopOnState = 0 at JobSupport.kt:536
                    getState(): Empty@1 at JobSupport.kt:170
                      JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                      AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                    state = Empty@1 at JobSupport.kt:170
                    i$a$-loopOnState-JobSupport$tryPutNodeIntoList$1 = 0 at JobSupport.kt:170
                    state.isActive(): true at JobSupport.kt:539
                    JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:541
                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(BlockingCoroutine@1, Empty@1, ChildHandleNode@1): true at JobSupport.kt:541
                    added = 1 at JobSupport.kt:1023
                  setParentHandle(ChildHandleNode@1) at JobSupport.kt:149
                    JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(DispatchedCoroutine@1, ChildHandleNode@1) at JobSupport.kt:130
                  isCompleted(): false at JobSupport.kt:151
                    getState(): Empty@1 at JobSupport.kt:179
                      JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                      AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): Empty@1 at JobSupport.kt:163
                  Job.DefaultImpls.fold(DispatchedCoroutine@1, CombinedContext@1, CoroutineContext.DefaultImpls$$Lambda@1): CombinedContext@1 at JobSupport.kt:22
                    CoroutineContext.Element.DefaultImpls.fold(DispatchedCoroutine@1, CombinedContext@1, CoroutineContext.DefaultImpls$$Lambda@1): CombinedContext@1 at Job.kt:118
                      ContinuationInterceptor.DefaultImpls.get(Unconfined@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                      Job.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at JobSupport.kt:22
                        CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at Job.kt:118
                      ContinuationInterceptor.DefaultImpls.get(Unconfined@1, ContinuationInterceptor.Key@1): Unconfined@1 at CoroutineDispatcher.kt:60
                      ContinuationInterceptor.DefaultImpls.get(Unconfined@1, ContinuationInterceptor.Key@1): Unconfined@1 at CoroutineDispatcher.kt:60
                  CancellableKt.startCoroutineCancellable(EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1, DispatchedCoroutine@1, DispatchedCoroutine@1) at Builders.common.kt:170
                    i$f$runSafely = 0 at Cancellable.kt:25
                    .runSafely() at Cancellable.kt:25
                      i$a$-runSafely-CancellableKt$startCoroutineCancellable$2 = 0 at Cancellable.kt:46
                      .runSafely$Lambda() at Cancellable.kt:46
                        Result.constructor-impl(Unit): Unit at Cancellable.kt:26
                        DispatchedContinuationKt.resumeCancellableWith(DispatchedContinuation@1, Unit) at Cancellable.kt:26
                          this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:278
                          i$f$resumeCancellableWith$kotlinx_coroutines_core = 0 at DispatchedContinuation.kt:278
                          DispatchedContinuation@1.resumeCancellableWith() at DispatchedContinuation.kt:278
                            CompletionStateKt.toState(Unit): Unit at DispatchedContinuation.kt:207
                              Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                            state = Unit at DispatchedContinuation.kt:207
                            getContext(): CombinedContext@1 at DispatchedContinuation.kt:208
                              continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                            DispatchedContinuationKt.safeIsDispatchNeeded(Unconfined@1, CombinedContext@1): false at DispatchedContinuation.kt:208
                              safeIsDispatchNeeded.isDispatchNeeded(CombinedContext@1): false at DispatchedContinuation.kt:262
                            executeUnconfined_u24default$iv = DispatchedContinuation@1 at DispatchedContinuation.kt:213
                            mode$iv = 1 at DispatchedContinuation.kt:213
                            doYield$iv = 0 at DispatchedContinuation.kt:294
                            i$f$executeUnconfined = 0 at DispatchedContinuation.kt:293
                            .executeUnconfined() at DispatchedContinuation.kt:293
                              DebugKt.getASSERTIONS_ENABLED(): true at DispatchedContinuation.kt:297
                              i$a$-assert-DispatchedContinuationKt$executeUnconfined$1$iv = 0 at fake.kt:1
                              ThreadLocalEventLoop.INSTANCE.getEventLoop(): BlockingEventLoop@1 at DispatchedContinuation.kt:298
                              eventLoop$iv.isUnconfinedLoopActive(): false at DispatchedContinuation.kt:301
                                delta(true): 4294967296 at EventLoop.common.kt:90
                              runUnconfinedEventLoop$iv$iv = DispatchedContinuation@1 at DispatchedContinuation.kt:309
                              i$f$runUnconfinedEventLoop = 0 at DispatchedContinuation.kt:309
                              DispatchedContinuation@1.runUnconfinedEventLoop() at DispatchedContinuation.kt:309
                                eventLoop$iv.incrementUseCount(true) at DispatchedTask.kt:184
                                  delta(true): 4294967296 at EventLoop.common.kt:100
                                  useCount = 4294967297 at EventLoop.common.kt:100
                                i$a$-executeUnconfined$default-DispatchedContinuation$resumeCancellableWith$1 = 0 at DispatchedTask.kt:186
                                this_$iv = DispatchedContinuation@1 at DispatchedContinuation.kt:214
                                i$f$resumeCancelled$kotlinx_coroutines_core = 0 at DispatchedContinuation.kt:214
                                .resumeCancelled() at DispatchedContinuation.kt:214
                                  getContext(): CombinedContext@1 at DispatchedContinuation.kt:224
                                    continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                                  CombinedContext@1.get(Job.Key@1): DispatchedCoroutine@1 at DispatchedContinuation.kt:224
                                    ContinuationInterceptor.DefaultImpls.get(Unconfined@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                                    Job.DefaultImpls.get(DispatchedCoroutine@1, Job.Key@1): DispatchedCoroutine@1 at JobSupport.kt:22
                                      CoroutineContext.Element.DefaultImpls.get(DispatchedCoroutine@1, Job.Key@1): DispatchedCoroutine@1 at Job.kt:118
                                  job$iv = DispatchedCoroutine@1 at DispatchedContinuation.kt:224
                                  job$iv.isActive(): true at DispatchedContinuation.kt:225
                                    isActive(): true at AbstractCoroutine.kt:64
                                      getState(): Empty@1 at JobSupport.kt:175
                                        JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                        AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): Empty@1 at JobSupport.kt:163
                                      state = Empty@1 at JobSupport.kt:175
                                      state.isActive(): true at JobSupport.kt:176
                                .resumeUndispatchedWith() at DispatchedContinuation.kt:215
                                  i$f$withContinuationContext = 0 at DispatchedContinuation.kt:236
                                  .withContinuationContext() at DispatchedContinuation.kt:236
                                    continuation$iv$iv.getContext(): CombinedContext@1 at CoroutineContext.kt:103
                                    context$iv$iv = CombinedContext@1 at CoroutineContext.kt:103
                                    ThreadContextKt.updateThreadContext(CombinedContext@1, CoroutineId@1): "Test worker @coroutine#1" at CoroutineContext.kt:104
                                      countOrElement = CoroutineId@1 at ThreadContext.kt:60
                                      element = CoroutineId@1 at ThreadContext.kt:72
                                      element.updateThreadContext(CombinedContext@1): "Test worker @coroutine#1" at ThreadContext.kt:74
                                        updateThreadContext(CombinedContext@1): "Test worker @coroutine#1" at CoroutineContext.kt:289
                                          context.get(CoroutineName.Key@1): null at CoroutineContext.kt:300
                                            ContinuationInterceptor.DefaultImpls.get(Unconfined@1, CoroutineName.Key@1): null at CoroutineDispatcher.kt:60
                                            Job.DefaultImpls.get(DispatchedCoroutine@1, CoroutineName.Key@1): null at JobSupport.kt:22
                                              CoroutineContext.Element.DefaultImpls.get(DispatchedCoroutine@1, CoroutineName.Key@1): null at Job.kt:118
                                          coroutineName = "coroutine" at CoroutineContext.kt:300
                                          Thread.currentThread(): Thread@1 at CoroutineContext.kt:301
                                          currentThread = Thread@1 at CoroutineContext.kt:301
                                          currentThread.getName(): "Test worker @coroutine#1" at CoroutineContext.kt:302
                                          oldName = "Test worker @coroutine#1" at CoroutineContext.kt:302
                                          lastIndex = 0 at CoroutineContext.kt:303
                                          StringsKt.lastIndexOf$default("Test worker @coroutine#1", " @", 0, false, 6, null): 11 at CoroutineContext.kt:303
                                          lastIndex = 11 at CoroutineContext.kt:303
                                          updateThreadContext_u24lambda_u240 = "" at CoroutineContext.kt:305
                                          i$a$-buildString-CoroutineId$updateThreadContext$1 = 0 at CoroutineContext.kt:305
                                          updateThreadContext_u24lambda_u240.append("Test worker"): "Test worker" at CoroutineContext.kt:306
                                          updateThreadContext_u24lambda_u240.append(" @"): "Test worker @" at CoroutineContext.kt:307
                                          updateThreadContext_u24lambda_u240.append("coroutine"): "Test worker @coroutine" at CoroutineContext.kt:308
                                          updateThreadContext_u24lambda_u240.append('#'): "Test worker @coroutine#" at CoroutineContext.kt:309
                                          updateThreadContext_u24lambda_u240.append(1): "Test worker @coroutine#1" at CoroutineContext.kt:310
                                          "Test worker @coroutine#1".toString(): "Test worker @coroutine#1" at CoroutineContext.kt:305
                                          currentThread.setName("Test worker @coroutine#1") at CoroutineContext.kt:305
                                    oldValue$iv$iv = "Test worker @coroutine#1" at CoroutineContext.kt:104
                                    CoroutineContextKt.updateUndispatchedCompletion(EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1, CombinedContext@1, "Test worker @coroutine#1"): null at CoroutineContext.kt:107
                                      context.get(UndispatchedMarker@1): null at CoroutineContext.kt:134
                                        ContinuationInterceptor.DefaultImpls.get(Unconfined@1, UndispatchedMarker@1): null at CoroutineDispatcher.kt:60
                                        Job.DefaultImpls.get(DispatchedCoroutine@1, UndispatchedMarker@1): null at JobSupport.kt:22
                                          CoroutineContext.Element.DefaultImpls.get(DispatchedCoroutine@1, UndispatchedMarker@1): null at Job.kt:118
                                      potentiallyHasUndispatchedCoroutine = 0 at CoroutineContext.kt:134
                                    undispatchedCompletion$iv$iv = null at CoroutineContext.kt:105
                                    i$a$-withContinuationContext-DispatchedContinuation$resumeUndispatchedWith$1$iv = 0 at CoroutineContext.kt:112
                                    .withContinuationContext$Lambda() at CoroutineContext.kt:112
                                      continuation.resumeWith(Unit) at DispatchedContinuation.kt:237
                                        ResultKt.throwOnFailure(Unit) at EventLoopsTest.kt:55
                                        label = 1 at EventLoopsTest.kt:56
                                        DelayKt.delay(1, EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1): CoroutineSingletons.COROUTINE_SUSPENDED at EventLoopsTest.kt:56
                                          i$f$suspendCancellableCoroutine = 0 at Delay.kt:123
                                          uCont = EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1 at CancellableContinuation.kt:426
                                          i$a$-suspendCoroutineUninterceptedOrReturn-CancellableContinuationKt$suspendCancellableCoroutine$2 = 0 at CancellableContinuation.kt:426
                                          continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                                          cancellable = CancellableContinuationImpl@1 at CancellableContinuation.kt:427
                                          cancellable.initCancellability() at CancellableContinuation.kt:433
                                            installParentHandle(): ChildContinuation@1 at CancellableContinuationImpl.kt:126
                                              getContext(): CombinedContext@1 at CancellableContinuationImpl.kt:340
                                              CombinedContext@1.get(Job.Key@1): DispatchedCoroutine@1 at CancellableContinuationImpl.kt:340
                                                ContinuationInterceptor.DefaultImpls.get(Unconfined@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                                                Job.DefaultImpls.get(DispatchedCoroutine@1, Job.Key@1): DispatchedCoroutine@1 at JobSupport.kt:22
                                                  CoroutineContext.Element.DefaultImpls.get(DispatchedCoroutine@1, Job.Key@1): DispatchedCoroutine@1 at Job.kt:118
                                              parent = DispatchedCoroutine@1 at CancellableContinuationImpl.kt:340
                                              JobKt.invokeOnCompletion$default(DispatchedCoroutine@1, false, ChildContinuation@1, 1, null): ChildContinuation@1 at CancellableContinuationImpl.kt:342
                                                JobKt__JobKt.invokeOnCompletion$default(DispatchedCoroutine@1, false, ChildContinuation@1, 1, null): ChildContinuation@1 at :1
                                                  JobKt.invokeOnCompletion(DispatchedCoroutine@1, true, ChildContinuation@1): ChildContinuation@1 at Job.kt:366
                                                    JobKt__JobKt.invokeOnCompletion(DispatchedCoroutine@1, true, ChildContinuation@1): ChildContinuation@1 at :1
                                                      invokeOnCompletion.invokeOnCompletionInternal(true, ChildContinuation@1): ChildContinuation@1 at Job.kt:370
                                                        node.setJob(DispatchedCoroutine@1) at JobSupport.kt:465
                                                          job = DispatchedCoroutine@1 at JobSupport.kt:1464
                                                        this_ = DispatchedCoroutine@1 at JobSupport.kt:468
                                                        i$f$tryPutNodeIntoList = 0 at JobSupport.kt:468
                                                        this_$iv = DispatchedCoroutine@1 at JobSupport.kt:536
                                                        i$f$loopOnState = 0 at JobSupport.kt:536
                                                        getState(): Empty@1 at JobSupport.kt:170
                                                          JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                                          AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): Empty@1 at JobSupport.kt:163
                                                        state = Empty@1 at JobSupport.kt:170
                                                        i$a$-loopOnState-JobSupport$tryPutNodeIntoList$1 = 0 at JobSupport.kt:170
                                                        state.isActive(): true at JobSupport.kt:539
                                                        JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:541
                                                        AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(DispatchedCoroutine@1, Empty@1, ChildContinuation@1): true at JobSupport.kt:541
                                                        added = 1 at JobSupport.kt:468
                                              handle = ChildContinuation@1 at CancellableContinuationImpl.kt:342
                                              CancellableContinuationImpl.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:342
                                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(CancellableContinuationImpl@1, null, ChildContinuation@1): true at CancellableContinuationImpl.kt:343
                                            handle = ChildContinuation@1 at CancellableContinuationImpl.kt:126
                                            isCompleted(): false at CancellableContinuationImpl.kt:131
                                              getState(): Active@1 at CancellableContinuationImpl.kt:109
                                                CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:0
                                                AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(CancellableContinuationImpl@1): Active@1 at CancellableContinuationImpl.kt:105
                                          cont = CancellableContinuationImpl@1 at CancellableContinuation.kt:434
                                          i$a$-suspendCancellableCoroutine-DelayKt$delay$2 = 0 at CancellableContinuation.kt:434
                                          cont.getContext(): CombinedContext@1 at Delay.kt:126
                                          DelayKt.getDelay(CombinedContext@1): DefaultExecutor@1 at Delay.kt:126
                                            delay.get(ContinuationInterceptor.Key@1): Unconfined@1 at Delay.kt:149
                                              ContinuationInterceptor.DefaultImpls.get(Unconfined@1, ContinuationInterceptor.Key@1): Unconfined@1 at CoroutineDispatcher.kt:60
                                            DefaultExecutorKt.getDefaultDelay(): DefaultExecutor@1 at Delay.kt:149
                                          DefaultExecutor@1.scheduleResumeAfterDelay(1, CancellableContinuationImpl@1) at Delay.kt:126
                                            invokeOnCancellationImpl(DisposeOnCancel@1) at CancellableContinuationImpl.kt:398
                                              DebugKt.getASSERTIONS_ENABLED(): true at CancellableContinuationImpl.kt:401
                                              i$a$-assert-CancellableContinuationImpl$invokeOnCancellationImpl$1 = 0 at fake.kt:1
                                              CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:400
                                              handler$atomicfu = AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:400
                                              handler$atomicfu.get(CancellableContinuationImpl@1): Active@1 at CancellableContinuationImpl.kt:400
                                              state = Active@1 at CancellableContinuationImpl.kt:400
                                              i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Any-CancellableContinuationImpl$invokeOnCancellationImpl$2 = 0 at CancellableContinuationImpl.kt:400
                                              CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:405
                                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(CancellableContinuationImpl@1, Active@1, DisposeOnCancel@1): true at CancellableContinuationImpl.kt:405
                                          cancellable.getResult(): CoroutineSingletons.COROUTINE_SUSPENDED at CancellableContinuation.kt:435
                                            isReusable(): false at CancellableContinuationImpl.kt:291
                                              DispatchedTaskKt.isReusableMode(1): false at CancellableContinuationImpl.kt:138
                                            isReusable = 0 at CancellableContinuationImpl.kt:291
                                            trySuspend(): true at CancellableContinuationImpl.kt:294
                                              this_ = CancellableContinuationImpl@1 at CancellableContinuationImpl.kt:269
                                              CancellableContinuationImpl.get_decisionAndIndex$volatile$FU(): AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:269
                                              handler$atomicfu = AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:269
                                              handler$atomicfu.get(CancellableContinuationImpl@1): 536870911 at CancellableContinuationImpl.kt:269
                                              cur = 536870911 at CancellableContinuationImpl.kt:269
                                              i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Int-CancellableContinuationImpl$trySuspend$1 = 0 at CancellableContinuationImpl.kt:269
                                              decision = 536870911 at CancellableContinuationImpl.kt:271
                                              i$f$getDecision = 0 at CancellableContinuationImpl.kt:271
                                              CancellableContinuationImpl@1.getDecision() at CancellableContinuationImpl.kt:271
                                              CancellableContinuationImpl.get_decisionAndIndex$volatile$FU(): AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:272
                                              i$f$getIndex = 0 at CancellableContinuationImpl.kt:272
                                              CancellableContinuationImpl@1.getIndex() at CancellableContinuationImpl.kt:272
                                              CancellableContinuationImpl@1.decisionAndIndex() at CancellableContinuationImpl.kt:272
                                              AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1.compareAndSet(CancellableContinuationImpl@1, 536870911, 1073741823): true at CancellableContinuationImpl.kt:272
                                            getParentHandle(): ChildContinuation@1 at CancellableContinuationImpl.kt:304
                                              CancellableContinuationImpl.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:0
                                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(CancellableContinuationImpl@1): ChildContinuation@1 at CancellableContinuationImpl.kt:103
                                          DebugProbesKt.probeCoroutineSuspended(EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1) at CancellableContinuation.kt:426
                                    i$a$-withContinuationContext-DispatchedContinuation$resumeUndispatchedWith$1$iv = Unit at CoroutineContext.kt:112
                                    ThreadContextKt.restoreThreadContext(CombinedContext@1, "Test worker @coroutine#1") at CoroutineContext.kt:115
                                      context.fold(null, ThreadContextKt$$Lambda@1): CoroutineId@1 at ThreadContext.kt:89
                                      element = CoroutineId@1 at ThreadContext.kt:88
                                      element.restoreThreadContext(CombinedContext@1, "Test worker @coroutine#1") at ThreadContext.kt:90
                                        restoreThreadContext(CombinedContext@1, "Test worker @coroutine#1") at CoroutineContext.kt:289
                                          Thread.currentThread(): Thread@1 at CoroutineContext.kt:316
                                          Thread@1.setName("Test worker @coroutine#1") at CoroutineContext.kt:316
                                eventLoop$iv.processUnconfinedEvent(): false at DispatchedTask.kt:189
                                eventLoop$iv.decrementUseCount(true) at DispatchedTask.kt:198
                                  delta(true): 4294967296 at EventLoop.common.kt:105
                                  useCount = 1 at EventLoop.common.kt:105
                  coroutine.getResult(): CoroutineSingletons.COROUTINE_SUSPENDED at Builders.common.kt:171
                    trySuspend(): true at Builders.common.kt:260
                      this_ = DispatchedCoroutine@1 at Builders.common.kt:227
                      DispatchedCoroutine.get_decision$volatile$FU(): AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at Builders.common.kt:227
                      handler$atomicfu = AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at Builders.common.kt:227
                      handler$atomicfu.get(DispatchedCoroutine@1): 0 at Builders.common.kt:227
                      decision = 0 at Builders.common.kt:227
                      i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Int-DispatchedCoroutine$trySuspend$1 = 0 at Builders.common.kt:227
                      DispatchedCoroutine.get_decision$volatile$FU(): AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at Builders.common.kt:230
                      AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1.compareAndSet(DispatchedCoroutine@1, 0, 1): true at Builders.common.kt:230
                  DebugProbesKt.probeCoroutineSuspended(EventLoopsTest$testEventLoopInDefaultExecutor$1@1) at Builders.common.kt:147
              context.fold(null, ThreadContextKt$$Lambda@1): CoroutineId@1 at ThreadContext.kt:89
              element = CoroutineId@1 at ThreadContext.kt:88
              element.restoreThreadContext(CombinedContext@1, "Test worker") at ThreadContext.kt:90
                restoreThreadContext(CombinedContext@1, "Test worker") at CoroutineContext.kt:289
                  Thread.currentThread(): Thread@1 at CoroutineContext.kt:316
                  Thread@1.setName("Test worker") at CoroutineContext.kt:316
            parkNanos = 0 at Builders.kt:94
            isCompleted(): false at Builders.kt:96
              getState(): ChildHandleNode@1 at JobSupport.kt:179
                JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): ChildHandleNode@1 at JobSupport.kt:163
            AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:97
            LockSupport.parkNanos(BlockingCoroutine@1, 0) at Builders.kt:97
            Thread.interrupted(): false at Builders.kt:98
            eventLoop.processNextEvent(): 9223372036854775807 at Builders.kt:94
            parkNanos = 9223372036854775807 at Builders.kt:94
            isCompleted(): false at Builders.kt:96
              getState(): ChildHandleNode@1 at JobSupport.kt:179
                JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): ChildHandleNode@1 at JobSupport.kt:163
            AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:97
            LockSupport.parkNanos(BlockingCoroutine@1, 9223372036854775807) at Builders.kt:97
            Thread.interrupted(): false at Builders.kt:98
            eventLoop.processNextEvent(): 0 at Builders.kt:94
              DebugKt.getASSERTIONS_ENABLED(): true at DispatchedTask.kt:78
              i$a$-assert-DispatchedTask$run$1 = 0 at fake.kt:1
              getDelegate(): DispatchedContinuation@1 at DispatchedTask.kt:80
              continuation = EventLoopsTest$testEventLoopInDefaultExecutor$1@1 at DispatchedTask.kt:81
              countOrElement = CoroutineId@1 at DispatchedTask.kt:82
              i$f$withContinuationContext = 0 at DispatchedTask.kt:82
              .withContinuationContext() at DispatchedTask.kt:82
                continuation.getContext(): CombinedContext@1 at CoroutineContext.kt:103
                context = CombinedContext@1 at CoroutineContext.kt:103
                ThreadContextKt.updateThreadContext(CombinedContext@1, CoroutineId@1): "Test worker" at CoroutineContext.kt:104
                  countOrElement = CoroutineId@1 at ThreadContext.kt:60
                  element = CoroutineId@1 at ThreadContext.kt:72
                  element.updateThreadContext(CombinedContext@1): "Test worker" at ThreadContext.kt:74
                    updateThreadContext(CombinedContext@1): "Test worker" at CoroutineContext.kt:289
                      context.get(CoroutineName.Key@1): null at CoroutineContext.kt:300
                        ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, CoroutineName.Key@1): null at CoroutineDispatcher.kt:60
                        Job.DefaultImpls.get(BlockingCoroutine@1, CoroutineName.Key@1): null at JobSupport.kt:22
                          CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, CoroutineName.Key@1): null at Job.kt:118
                      coroutineName = "coroutine" at CoroutineContext.kt:300
                      Thread.currentThread(): Thread@1 at CoroutineContext.kt:301
                      currentThread = Thread@1 at CoroutineContext.kt:301
                      currentThread.getName(): "Test worker" at CoroutineContext.kt:302
                      oldName = "Test worker" at CoroutineContext.kt:302
                      lastIndex = 0 at CoroutineContext.kt:303
                      StringsKt.lastIndexOf$default("Test worker", " @", 0, false, 6, null): -1 at CoroutineContext.kt:303
                      lastIndex = -1 at CoroutineContext.kt:303
                      lastIndex = 11 at CoroutineContext.kt:304
                      updateThreadContext_u24lambda_u240 = "" at CoroutineContext.kt:305
                      i$a$-buildString-CoroutineId$updateThreadContext$1 = 0 at CoroutineContext.kt:305
                      updateThreadContext_u24lambda_u240.append("Test worker"): "Test worker" at CoroutineContext.kt:306
                      updateThreadContext_u24lambda_u240.append(" @"): "Test worker @" at CoroutineContext.kt:307
                      updateThreadContext_u24lambda_u240.append("coroutine"): "Test worker @coroutine" at CoroutineContext.kt:308
                      updateThreadContext_u24lambda_u240.append('#'): "Test worker @coroutine#" at CoroutineContext.kt:309
                      updateThreadContext_u24lambda_u240.append(1): "Test worker @coroutine#1" at CoroutineContext.kt:310
                      "Test worker @coroutine#1".toString(): "Test worker @coroutine#1" at CoroutineContext.kt:305
                      currentThread.setName("Test worker @coroutine#1") at CoroutineContext.kt:305
                oldValue = "Test worker" at CoroutineContext.kt:104
                CoroutineContextKt.updateUndispatchedCompletion(EventLoopsTest$testEventLoopInDefaultExecutor$1@1, CombinedContext@1, "Test worker"): null at CoroutineContext.kt:107
                  context.get(UndispatchedMarker@1): null at CoroutineContext.kt:134
                    ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, UndispatchedMarker@1): null at CoroutineDispatcher.kt:60
                    Job.DefaultImpls.get(BlockingCoroutine@1, UndispatchedMarker@1): null at JobSupport.kt:22
                      CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, UndispatchedMarker@1): null at Job.kt:118
                  potentiallyHasUndispatchedCoroutine = 0 at CoroutineContext.kt:134
                undispatchedCompletion = null at CoroutineContext.kt:105
                i$a$-withContinuationContext-DispatchedTask$run$2 = 0 at CoroutineContext.kt:112
                .withContinuationContext$Lambda() at CoroutineContext.kt:112
                  continuation.getContext(): CombinedContext@1 at DispatchedTask.kt:83
                  context = CombinedContext@1 at DispatchedTask.kt:83
                  takeState(): Unit at DispatchedTask.kt:84
                    state = Unit at DispatchedContinuation.kt:179
                    DebugKt.getASSERTIONS_ENABLED(): true at DispatchedContinuation.kt:180
                    i$a$-assert-DispatchedContinuation$takeState$1 = 0 at fake.kt:1
                    DispatchedContinuationKt.access$getUNDEFINED$p(): Symbol@1 at DispatchedContinuation.kt:180
                    DispatchedContinuationKt.access$getUNDEFINED$p(): Symbol@1 at DispatchedContinuation.kt:181
                    _state = Symbol@1 at DispatchedContinuation.kt:181
                  state = Unit at DispatchedTask.kt:84
                  getExceptionalResult(Unit): null at DispatchedTask.kt:85
                  exception = null at DispatchedTask.kt:85
                  DispatchedTaskKt.isCancellableMode(1): true at DispatchedTask.kt:91
                  context.get(Job.Key@1): BlockingCoroutine@1 at DispatchedTask.kt:91
                    ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                    Job.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at JobSupport.kt:22
                      CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at Job.kt:118
                  job = BlockingCoroutine@1 at DispatchedTask.kt:91
                  job.isActive(): true at DispatchedTask.kt:92
                    isActive(): true at AbstractCoroutine.kt:64
                      getState(): Empty@1 at JobSupport.kt:175
                        JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                        AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                      state = Empty@1 at JobSupport.kt:175
                      state.isActive(): true at JobSupport.kt:176
                  getSuccessfulResult(Unit): Unit at DispatchedTask.kt:100
                  Result.constructor-impl(Unit): Unit at DispatchedTask.kt:100
                  continuation.resumeWith(Unit) at DispatchedTask.kt:100
                    ResultKt.throwOnFailure(Unit) at EventLoopsTest.kt:53
                    finish(6) at EventLoopsTest.kt:68
                      orderedExecutionDelegate.finish(6) at TestBase.common.kt:195
                    ContinuationInterceptor.DefaultImpls.get(BlockingEventLoop@1, ContinuationInterceptor.Key@1): BlockingEventLoop@1 at CoroutineDispatcher.kt:60
                    dispatched = DispatchedContinuation@1 at CoroutineDispatcher.kt:248
                    dispatched.release() at CoroutineDispatcher.kt:249
                      awaitReusability() at DispatchedContinuation.kt:83
                        this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:71
                        DispatchedContinuation.get_reusableCancellableContinuation$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:71
                        handler$atomicfu = AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:71
                        handler$atomicfu.get(DispatchedContinuation@1): null at DispatchedContinuation.kt:71
                        it = null at DispatchedContinuation.kt:71
                        i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Any-DispatchedContinuation$awaitReusability$1 = 0 at DispatchedContinuation.kt:71
                      getReusableCancellableContinuation(): null at DispatchedContinuation.kt:84
                        DispatchedContinuation.get_reusableCancellableContinuation$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:0
                        AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedContinuation@1): null at DispatchedContinuation.kt:55
                    CompletionStateKt.toState(Unit): Unit at AbstractCoroutine.kt:99
                      Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                    makeCompletingOnce(Unit): Unit at AbstractCoroutine.kt:99
                      this_ = BlockingCoroutine@1 at JobSupport.kt:858
                      i$f$loopOnState = 0 at JobSupport.kt:858
                      getState(): Empty@1 at JobSupport.kt:170
                        JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                        AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                      state = Empty@1 at JobSupport.kt:170
                      i$a$-loopOnState-JobSupport$makeCompletingOnce$1 = 0 at JobSupport.kt:170
                      tryMakeCompleting(Empty@1, Unit): Unit at JobSupport.kt:859
                        tryFinalizeSimpleState(Empty@1, Unit): true at JobSupport.kt:887
                          DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:283
                          i$a$-assert-JobSupport$tryFinalizeSimpleState$1 = 0 at fake.kt:1
                          DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:284
                          JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:285
                          JobSupportKt.boxIncomplete(Unit): Unit at JobSupport.kt:285
                          AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(BlockingCoroutine@1, Empty@1, Unit): true at JobSupport.kt:285
                          onCancelling(null) at JobSupport.kt:286
                          onCompletionInternal(Unit) at JobSupport.kt:287
                            onCompleted(Unit) at AbstractCoroutine.kt:92
                          completeStateFinalization(Empty@1, Unit) at JobSupport.kt:288
                            getParentHandle(): NonDisposableHandle@1 at JobSupport.kt:300
                              JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): NonDisposableHandle@1 at JobSupport.kt:129
                            it = NonDisposableHandle@1 at JobSupport.kt:300
                            i$a$-let-JobSupport$completeStateFinalization$1 = 0 at JobSupport.kt:300
                            it.dispose() at JobSupport.kt:301
                            setParentHandle(NonDisposableHandle@1) at JobSupport.kt:302
                              JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(BlockingCoroutine@1, NonDisposableHandle@1) at JobSupport.kt:130
                            cause = null at JobSupport.kt:304
                            state.getList(): null at JobSupport.kt:316
                      finalState = Unit at JobSupport.kt:859
                      JobSupportKt.access$getCOMPLETING_ALREADY$p(): Symbol@1 at JobSupport.kt:861
                      JobSupportKt.access$getCOMPLETING_RETRY$p(): Symbol@1 at JobSupport.kt:866
                    state = Unit at AbstractCoroutine.kt:99
                    afterResume(Unit) at AbstractCoroutine.kt:101
                      afterCompletion(Unit) at AbstractCoroutine.kt:113
                        Thread.currentThread(): Thread@1 at Builders.kt:83
                i$a$-withContinuationContext-DispatchedTask$run$2 = Unit at CoroutineContext.kt:112
                ThreadContextKt.restoreThreadContext(CombinedContext@1, "Test worker") at CoroutineContext.kt:115
                  context.fold(null, ThreadContextKt$$Lambda@1): CoroutineId@1 at ThreadContext.kt:89
                  element = CoroutineId@1 at ThreadContext.kt:88
                  element.restoreThreadContext(CombinedContext@1, "Test worker") at ThreadContext.kt:90
                    restoreThreadContext(CombinedContext@1, "Test worker") at CoroutineContext.kt:289
                      Thread.currentThread(): Thread@1 at CoroutineContext.kt:316
                      Thread@1.setName("Test worker") at CoroutineContext.kt:316
            parkNanos = 0 at Builders.kt:94
            isCompleted(): true at Builders.kt:96
              getState(): Unit at JobSupport.kt:179
                JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Unit at JobSupport.kt:163
            BlockingEventLoop@1.decrementUseCount(false) at Builders.kt:101
              delta(false): 1 at EventLoop.common.kt:105
              useCount = 0 at EventLoop.common.kt:105
              DebugKt.getASSERTIONS_ENABLED(): true at EventLoop.common.kt:107
              i$a$-assert-EventLoop$decrementUseCount$1 = 0 at fake.kt:1
              shutdown() at EventLoop.common.kt:110
            AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:104
            getState(): Unit at Builders.kt:107
              JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Unit at JobSupport.kt:163
            JobSupportKt.unboxState(Unit): Unit at Builders.kt:107
# Thread 2 (kotlinx.coroutines.DefaultExecutor)
Thread@1.run(): <unfinished method> at :0
  dc = DispatchedContinuation@1 at CancellableContinuationImpl.kt:595
  CancellableContinuationImpl@1.resumeImpl(Unit, 1, null) at CancellableContinuationImpl.kt:596
    this_ = CancellableContinuationImpl@1 at CancellableContinuationImpl.kt:493
    CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:493
    handler$atomicfu = AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:493
    handler$atomicfu.get(CancellableContinuationImpl@1): Active@1 at CancellableContinuationImpl.kt:493
    state = Active@1 at CancellableContinuationImpl.kt:493
    i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Any-CancellableContinuationImpl$resumeImpl$1 = 0 at CancellableContinuationImpl.kt:493
    resumedState(Active@1, Unit, 1, null, null): Unit at CancellableContinuationImpl.kt:501
      DispatchedTaskKt.isCancellableMode(1): true at CancellableContinuationImpl.kt:485
    update = Unit at CancellableContinuationImpl.kt:501
    CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:502
    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(CancellableContinuationImpl@1, Active@1, Unit): false at CancellableContinuationImpl.kt:502
    handler$atomicfu.get(CancellableContinuationImpl@1): DisposeOnCancel@1 at CancellableContinuationImpl.kt:493
    state = DisposeOnCancel@1 at CancellableContinuationImpl.kt:493
    i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Any-CancellableContinuationImpl$resumeImpl$1 = 0 at CancellableContinuationImpl.kt:493
    resumedState(DisposeOnCancel@1, Unit, 1, null, null): CompletedContinuation@1 at CancellableContinuationImpl.kt:501
      DispatchedTaskKt.isCancellableMode(1): true at CancellableContinuationImpl.kt:485
    update = CompletedContinuation@1 at CancellableContinuationImpl.kt:501
    CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:502
    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(CancellableContinuationImpl@1, DisposeOnCancel@1, CompletedContinuation@1): true at CancellableContinuationImpl.kt:502
    detachChildIfNonReusable() at CancellableContinuationImpl.kt:503
      isReusable(): false at CancellableContinuationImpl.kt:562
        DispatchedTaskKt.isReusableMode(1): false at CancellableContinuationImpl.kt:138
      detachChild() at CancellableContinuationImpl.kt:562
        getParentHandle(): ChildContinuation@1 at CancellableContinuationImpl.kt:569
          CancellableContinuationImpl.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:0
          AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(CancellableContinuationImpl@1): ChildContinuation@1 at CancellableContinuationImpl.kt:103
        handle = ChildContinuation@1 at CancellableContinuationImpl.kt:569
        handle.dispose() at CancellableContinuationImpl.kt:570
          getJob(): DispatchedCoroutine@1 at JobSupport.kt:1475
          DispatchedCoroutine@1.removeNode(ChildContinuation@1) at JobSupport.kt:1475
            this_ = DispatchedCoroutine@1 at JobSupport.kt:621
            i$f$loopOnState = 0 at JobSupport.kt:621
            getState(): ChildContinuation@1 at JobSupport.kt:170
              JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): ChildContinuation@1 at JobSupport.kt:163
            state = ChildContinuation@1 at JobSupport.kt:170
            i$a$-loopOnState-JobSupport$removeNode$1 = 0 at JobSupport.kt:170
            JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:626
            JobSupportKt.access$getEMPTY_ACTIVE$p(): Empty@1 at JobSupport.kt:626
            AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(DispatchedCoroutine@1, ChildContinuation@1, Empty@1): true at JobSupport.kt:626
        CancellableContinuationImpl.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:570
        AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(CancellableContinuationImpl@1, NonDisposableHandle@1) at CancellableContinuationImpl.kt:571
    dispatchResume(1) at CancellableContinuationImpl.kt:504
      tryResume(): false at CancellableContinuationImpl.kt:468
        this_ = CancellableContinuationImpl@1 at CancellableContinuationImpl.kt:279
        CancellableContinuationImpl.get_decisionAndIndex$volatile$FU(): AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:279
        handler$atomicfu = AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:279
        handler$atomicfu.get(CancellableContinuationImpl@1): 1073741823 at CancellableContinuationImpl.kt:279
        cur = 1073741823 at CancellableContinuationImpl.kt:279
        i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Int-CancellableContinuationImpl$tryResume$1 = 0 at CancellableContinuationImpl.kt:279
        decision = 1073741823 at CancellableContinuationImpl.kt:281
        i$f$getDecision = 0 at CancellableContinuationImpl.kt:281
        CancellableContinuationImpl@1.getDecision() at CancellableContinuationImpl.kt:281
      DispatchedTaskKt.dispatch(CancellableContinuationImpl@1, 1) at CancellableContinuationImpl.kt:470
        DebugKt.getASSERTIONS_ENABLED(): true at DispatchedTask.kt:137
        i$a$-assert-DispatchedTaskKt$dispatch$1 = 0 at fake.kt:1
        dispatch.getDelegate(): DispatchedContinuation@1 at DispatchedTask.kt:138
        undispatched = 0 at DispatchedTask.kt:139
        DispatchedTaskKt.isCancellableMode(1): true at DispatchedTask.kt:140
        DispatchedTaskKt.isCancellableMode(1): true at DispatchedTask.kt:140
        dispatcher = Unconfined@1 at DispatchedTask.kt:142
        delegate.getContext(): CombinedContext@1 at DispatchedTask.kt:143
          continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
        context = CombinedContext@1 at DispatchedTask.kt:143
        DispatchedContinuationKt.safeIsDispatchNeeded(Unconfined@1, CombinedContext@1): false at DispatchedTask.kt:144
          safeIsDispatchNeeded.isDispatchNeeded(CombinedContext@1): false at DispatchedContinuation.kt:262
        DispatchedTaskKt.resumeUnconfined(CancellableContinuationImpl@1) at DispatchedTask.kt:147
          ThreadLocalEventLoop.INSTANCE.getEventLoop(): DefaultExecutor@1 at DispatchedTask.kt:168
          eventLoop = DefaultExecutor@1 at DispatchedTask.kt:168
          eventLoop.isUnconfinedLoopActive(): false at DispatchedTask.kt:169
            delta(true): 4294967296 at EventLoop.common.kt:90
          runUnconfinedEventLoop = CancellableContinuationImpl@1 at DispatchedTask.kt:174
          i$f$runUnconfinedEventLoop = 0 at DispatchedTask.kt:174
          CancellableContinuationImpl@1.runUnconfinedEventLoop() at DispatchedTask.kt:174
            eventLoop.incrementUseCount(true) at DispatchedTask.kt:184
              delta(true): 4294967296 at EventLoop.common.kt:100
              useCount = 4294967297 at EventLoop.common.kt:100
            i$a$-runUnconfinedEventLoop-DispatchedTaskKt$resumeUnconfined$1 = 0 at DispatchedTask.kt:186
            .runUnconfinedEventLoop$Lambda() at DispatchedTask.kt:186
              resumeUnconfined.getDelegate(): DispatchedContinuation@1 at DispatchedTask.kt:175
              DispatchedTaskKt.resume(CancellableContinuationImpl@1, DispatchedContinuation@1, true) at DispatchedTask.kt:175
                resume.takeState(): CompletedContinuation@1 at DispatchedTask.kt:158
                  getState(): CompletedContinuation@1 at CancellableContinuationImpl.kt:165
                    CancellableContinuationImpl.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at CancellableContinuationImpl.kt:0
                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(CancellableContinuationImpl@1): CompletedContinuation@1 at CancellableContinuationImpl.kt:105
                state = CompletedContinuation@1 at DispatchedTask.kt:158
                resume.getExceptionalResult(CompletedContinuation@1): null at DispatchedTask.kt:159
                  getExceptionalResult(CompletedContinuation@1): null at CancellableContinuationImpl.kt:614
                exception = null at DispatchedTask.kt:159
                resume.getSuccessfulResult(CompletedContinuation@1): Unit at DispatchedTask.kt:160
                Result.constructor-impl(Unit): Unit at DispatchedTask.kt:160
                result = Unit at DispatchedTask.kt:160
                this_ = DispatchedContinuation@1 at DispatchedTask.kt:162
                i$f$resumeUndispatchedWith$kotlinx_coroutines_core = 0 at DispatchedTask.kt:162
                DispatchedContinuation@1.resumeUndispatchedWith() at DispatchedTask.kt:162
                  continuation$iv = EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1 at DispatchedContinuation.kt:236
                  countOrElement$iv = CoroutineId@1 at DispatchedContinuation.kt:236
                  i$f$withContinuationContext = 0 at DispatchedContinuation.kt:236
                  .withContinuationContext() at DispatchedContinuation.kt:236
                    continuation$iv.getContext(): CombinedContext@1 at CoroutineContext.kt:103
                    context$iv = CombinedContext@1 at CoroutineContext.kt:103
                    ThreadContextKt.updateThreadContext(CombinedContext@1, CoroutineId@1): "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:104
                      countOrElement = CoroutineId@1 at ThreadContext.kt:60
                      element = CoroutineId@1 at ThreadContext.kt:72
                      element.updateThreadContext(CombinedContext@1): "kotlinx.coroutines.DefaultExecutor" at ThreadContext.kt:74
                        updateThreadContext(CombinedContext@1): "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:289
                          context.get(CoroutineName.Key@1): null at CoroutineContext.kt:300
                            ContinuationInterceptor.DefaultImpls.get(Unconfined@1, CoroutineName.Key@1): null at CoroutineDispatcher.kt:60
                            Job.DefaultImpls.get(DispatchedCoroutine@1, CoroutineName.Key@1): null at JobSupport.kt:22
                              CoroutineContext.Element.DefaultImpls.get(DispatchedCoroutine@1, CoroutineName.Key@1): null at Job.kt:118
                          coroutineName = "coroutine" at CoroutineContext.kt:300
                          Thread.currentThread(): Thread@1 at CoroutineContext.kt:301
                          currentThread = Thread@1 at CoroutineContext.kt:301
                          currentThread.getName(): "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:302
                          oldName = "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:302
                          lastIndex = 0 at CoroutineContext.kt:303
                          StringsKt.lastIndexOf$default("kotlinx.coroutines.DefaultExecutor", " @", 0, false, 6, null): -1 at CoroutineContext.kt:303
                          lastIndex = -1 at CoroutineContext.kt:303
                          lastIndex = 34 at CoroutineContext.kt:304
                          updateThreadContext_u24lambda_u240 = "" at CoroutineContext.kt:305
                          i$a$-buildString-CoroutineId$updateThreadContext$1 = 0 at CoroutineContext.kt:305
                          updateThreadContext_u24lambda_u240.append("kotlinx.coroutines.DefaultExecutor"): "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:306
                          updateThreadContext_u24lambda_u240.append(" @"): "kotlinx.coroutines.DefaultExecutor @" at CoroutineContext.kt:307
                          updateThreadContext_u24lambda_u240.append("coroutine"): "kotlinx.coroutines.DefaultExecutor @coroutine" at CoroutineContext.kt:308
                          updateThreadContext_u24lambda_u240.append('#'): "kotlinx.coroutines.DefaultExecutor @coroutine#" at CoroutineContext.kt:309
                          updateThreadContext_u24lambda_u240.append(1): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:310
                          "kotlinx.coroutines.DefaultExecutor @coroutine#1".toString(): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:305
                          currentThread.setName("kotlinx.coroutines.DefaultExecutor @coroutine#1") at CoroutineContext.kt:305
                    oldValue$iv = "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:104
                    CoroutineContextKt.updateUndispatchedCompletion(EventLoopsTest$testEventLoopInDefaultExecutor$1$1@1, CombinedContext@1, "kotlinx.coroutines.DefaultExecutor"): null at CoroutineContext.kt:107
                      context.get(UndispatchedMarker@1): null at CoroutineContext.kt:134
                        ContinuationInterceptor.DefaultImpls.get(Unconfined@1, UndispatchedMarker@1): null at CoroutineDispatcher.kt:60
                        Job.DefaultImpls.get(DispatchedCoroutine@1, UndispatchedMarker@1): null at JobSupport.kt:22
                          CoroutineContext.Element.DefaultImpls.get(DispatchedCoroutine@1, UndispatchedMarker@1): null at Job.kt:118
                      potentiallyHasUndispatchedCoroutine = 0 at CoroutineContext.kt:134
                    undispatchedCompletion$iv = null at CoroutineContext.kt:105
                    i$a$-withContinuationContext-DispatchedContinuation$resumeUndispatchedWith$1 = 0 at CoroutineContext.kt:112
                    .withContinuationContext$Lambda() at CoroutineContext.kt:112
                      continuation.resumeWith(Unit) at DispatchedContinuation.kt:237
                        ResultKt.throwOnFailure(Unit) at EventLoopsTest.kt:55
                        Thread.currentThread(): Thread@1 at EventLoopsTest.kt:57
                        Thread@1.getName(): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at EventLoopsTest.kt:57
                        StringsKt.startsWith$default("kotlinx.coroutines.DefaultExecutor @coroutine#1", "kotlinx.coroutines.DefaultExecutor", false, 2, null): true at EventLoopsTest.kt:57
                        AssertionsKt.assertTrue$default(true, null, 2, null) at EventLoopsTest.kt:57
                        expect(2) at EventLoopsTest.kt:58
                          orderedExecutionDelegate.expect(2) at TestBase.common.kt:193
                        DefaultExecutor.INSTANCE.enqueue(EventLoopsTest$testEventLoopInDefaultExecutor$1$1$$Lambda@1) at EventLoopsTest.kt:60
                        expect(3) at EventLoopsTest.kt:63
                          orderedExecutionDelegate.expect(3) at TestBase.common.kt:193
                        BuildersKt.runBlocking$default(null, EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1, 1, null): Unit at EventLoopsTest.kt:64
                          BuildersKt__BuildersKt.runBlocking$default(null, EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1, 1, null): Unit at :1
                            BuildersKt.runBlocking(EmptyCoroutineContext@1, EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1): Unit at Builders.kt:48
                              BuildersKt__BuildersKt.runBlocking(EmptyCoroutineContext@1, EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1): Unit at :1
                                Thread.currentThread(): Thread@1 at Builders.kt:53
                                currentThread = Thread@1 at Builders.kt:53
                                context.get(ContinuationInterceptor.Key@1): null at Builders.kt:54
                                contextInterceptor = null at Builders.kt:54
                                eventLoop = null at Builders.kt:55
                                newContext = null at Builders.kt:56
                                ThreadLocalEventLoop.INSTANCE.getEventLoop(): DefaultExecutor@1 at Builders.kt:59
                                eventLoop = DefaultExecutor@1 at Builders.kt:59
                                context.plus(DefaultExecutor@1): DefaultExecutor@1 at Builders.kt:60
                                CoroutineContextKt.newCoroutineContext(GlobalScope@1, DefaultExecutor@1): CombinedContext@1 at Builders.kt:60
                                  newCoroutineContext.getCoroutineContext(): EmptyCoroutineContext@1 at CoroutineContext.kt:15
                                  CoroutineContextKt.foldCopies(EmptyCoroutineContext@1, DefaultExecutor@1, true): DefaultExecutor@1 at CoroutineContext.kt:15
                                    CoroutineContextKt.hasCopyableElements(EmptyCoroutineContext@1): false at CoroutineContext.kt:50
                                      hasCopyableElements.fold(false, CoroutineContextKt$$Lambda@1): false at CoroutineContext.kt:36
                                    hasElementsLeft = 0 at CoroutineContext.kt:50
                                    CoroutineContextKt.hasCopyableElements(DefaultExecutor@1): false at CoroutineContext.kt:51
                                      hasCopyableElements.fold(false, CoroutineContextKt$$Lambda@1): false at CoroutineContext.kt:36
                                    hasElementsRight = 0 at CoroutineContext.kt:51
                                    originalContext.plus(DefaultExecutor@1): DefaultExecutor@1 at CoroutineContext.kt:55
                                  combined = DefaultExecutor@1 at CoroutineContext.kt:15
                                  DebugKt.getDEBUG(): true at CoroutineContext.kt:16
                                  DebugKt.getCOROUTINE_ID(): AtomicLong@1 at CoroutineContext.kt:16
                                  AtomicLong@1.incrementAndGet(): 2 at CoroutineContext.kt:16
                                  combined.plus(CoroutineId@1): CombinedContext@1 at CoroutineContext.kt:16
                                    ContinuationInterceptor.DefaultImpls.minusKey(DefaultExecutor@1, CoroutineId.Key@1): DefaultExecutor@1 at CoroutineDispatcher.kt:60
                                    ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, ContinuationInterceptor.Key@1): DefaultExecutor@1 at CoroutineDispatcher.kt:60
                                    ContinuationInterceptor.DefaultImpls.minusKey(DefaultExecutor@1, ContinuationInterceptor.Key@1): EmptyCoroutineContext@1 at CoroutineDispatcher.kt:60
                                  debug = CombinedContext@1 at CoroutineContext.kt:16
                                  Dispatchers.getDefault(): DefaultScheduler@1 at CoroutineContext.kt:17
                                  combined.get(ContinuationInterceptor.Key@1): DefaultExecutor@1 at CoroutineContext.kt:17
                                    ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, ContinuationInterceptor.Key@1): DefaultExecutor@1 at CoroutineDispatcher.kt:60
                                newContext = CombinedContext@1 at Builders.kt:60
                                ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                                DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:142
                                i$a$-assert-JobSupport$initParentJob$1 = 0 at fake.kt:1
                                getParentHandle(): null at JobSupport.kt:142
                                  JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                  AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): null at JobSupport.kt:129
                                setParentHandle(NonDisposableHandle@1) at JobSupport.kt:144
                                  JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                  AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(BlockingCoroutine@1, NonDisposableHandle@1) at JobSupport.kt:130
                                Job.DefaultImpls.fold(BlockingCoroutine@1, CombinedContext@1, CoroutineContext.DefaultImpls$$Lambda@1): CombinedContext@1 at JobSupport.kt:22
                                  CoroutineContext.Element.DefaultImpls.fold(BlockingCoroutine@1, CombinedContext@1, CoroutineContext.DefaultImpls$$Lambda@1): CombinedContext@1 at Job.kt:118
                                    ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                                    ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, ContinuationInterceptor.Key@1): DefaultExecutor@1 at CoroutineDispatcher.kt:60
                                    ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, ContinuationInterceptor.Key@1): DefaultExecutor@1 at CoroutineDispatcher.kt:60
                                coroutine = BlockingCoroutine@1 at Builders.kt:68
                                coroutine.start(CoroutineStart.DEFAULT, BlockingCoroutine@1, EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1) at Builders.kt:69
                                  start.invoke(EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1, BlockingCoroutine@1, BlockingCoroutine@1) at AbstractCoroutine.kt:134
                                    i$f$runSafely = 0 at Cancellable.kt:25
                                    .runSafely() at Cancellable.kt:25
                                      i$a$-runSafely-CancellableKt$startCoroutineCancellable$2 = 0 at Cancellable.kt:46
                                      .runSafely$Lambda() at Cancellable.kt:46
                                        Result.constructor-impl(Unit): Unit at Cancellable.kt:26
                                        DispatchedContinuationKt.resumeCancellableWith(DispatchedContinuation@1, Unit) at Cancellable.kt:26
                                          this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:278
                                          i$f$resumeCancellableWith$kotlinx_coroutines_core = 0 at DispatchedContinuation.kt:278
                                          DispatchedContinuation@1.resumeCancellableWith() at DispatchedContinuation.kt:278
                                            CompletionStateKt.toState(Unit): Unit at DispatchedContinuation.kt:207
                                              Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                                            state = Unit at DispatchedContinuation.kt:207
                                            getContext(): CombinedContext@1 at DispatchedContinuation.kt:208
                                              continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                                            DispatchedContinuationKt.safeIsDispatchNeeded(DefaultExecutor@1, CombinedContext@1): true at DispatchedContinuation.kt:208
                                              safeIsDispatchNeeded.isDispatchNeeded(CombinedContext@1): true at DispatchedContinuation.kt:262
                                            _state = Unit at DispatchedContinuation.kt:209
                                            resumeMode = 1 at DispatchedContinuation.kt:210
                                            getContext(): CombinedContext@1 at DispatchedContinuation.kt:211
                                              continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                                            DispatchedContinuationKt.safeDispatch(DefaultExecutor@1, CombinedContext@1, DispatchedContinuation@1) at DispatchedContinuation.kt:211
                                              safeDispatch.dispatch(CombinedContext@1, DispatchedContinuation@1) at DispatchedContinuation.kt:254
                                coroutine.joinBlocking(): Unit at Builders.kt:70
                                  AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:89
                                  DefaultExecutor@1.incrementUseCount(false) at Builders.kt:91
                                    delta(false): 1 at EventLoop.common.kt:100
                                    useCount = 4294967298 at EventLoop.common.kt:100
                                    shared = true at EventLoop.common.kt:101
                                  eventLoop.processNextEvent(): 0 at Builders.kt:94
                                    expect(4) at EventLoopsTest.kt:61
                                      orderedExecutionDelegate.expect(4) at TestBase.common.kt:193
                                  parkNanos = 0 at Builders.kt:94
                                  isCompleted(): false at Builders.kt:96
                                    getState(): Empty@1 at JobSupport.kt:179
                                      JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                      AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                                  AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:97
                                  LockSupport.parkNanos(BlockingCoroutine@1, 0) at Builders.kt:97
                                  Thread.interrupted(): false at Builders.kt:98
                                  eventLoop.processNextEvent(): 0 at Builders.kt:94
                                    DebugKt.getASSERTIONS_ENABLED(): true at DispatchedTask.kt:78
                                    i$a$-assert-DispatchedTask$run$1 = 0 at fake.kt:1
                                    getDelegate(): DispatchedContinuation@1 at DispatchedTask.kt:80
                                    continuation = EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1 at DispatchedTask.kt:81
                                    countOrElement = CoroutineId@1 at DispatchedTask.kt:82
                                    i$f$withContinuationContext = 0 at DispatchedTask.kt:82
                                    .withContinuationContext() at DispatchedTask.kt:82
                                      continuation.getContext(): CombinedContext@1 at CoroutineContext.kt:103
                                      context = CombinedContext@1 at CoroutineContext.kt:103
                                      ThreadContextKt.updateThreadContext(CombinedContext@1, CoroutineId@1): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:104
                                        countOrElement = CoroutineId@1 at ThreadContext.kt:60
                                        element = CoroutineId@1 at ThreadContext.kt:72
                                        element.updateThreadContext(CombinedContext@1): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at ThreadContext.kt:74
                                          updateThreadContext(CombinedContext@1): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:289
                                            context.get(CoroutineName.Key@1): null at CoroutineContext.kt:300
                                              ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, CoroutineName.Key@1): null at CoroutineDispatcher.kt:60
                                              Job.DefaultImpls.get(BlockingCoroutine@1, CoroutineName.Key@1): null at JobSupport.kt:22
                                                CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, CoroutineName.Key@1): null at Job.kt:118
                                            coroutineName = "coroutine" at CoroutineContext.kt:300
                                            Thread.currentThread(): Thread@1 at CoroutineContext.kt:301
                                            currentThread = Thread@1 at CoroutineContext.kt:301
                                            currentThread.getName(): "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:302
                                            oldName = "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:302
                                            lastIndex = 0 at CoroutineContext.kt:303
                                            StringsKt.lastIndexOf$default("kotlinx.coroutines.DefaultExecutor @coroutine#1", " @", 0, false, 6, null): 34 at CoroutineContext.kt:303
                                            lastIndex = 34 at CoroutineContext.kt:303
                                            updateThreadContext_u24lambda_u240 = "" at CoroutineContext.kt:305
                                            i$a$-buildString-CoroutineId$updateThreadContext$1 = 0 at CoroutineContext.kt:305
                                            updateThreadContext_u24lambda_u240.append("kotlinx.coroutines.DefaultExecutor"): "kotlinx.coroutines.DefaultExecutor" at CoroutineContext.kt:306
                                            updateThreadContext_u24lambda_u240.append(" @"): "kotlinx.coroutines.DefaultExecutor @" at CoroutineContext.kt:307
                                            updateThreadContext_u24lambda_u240.append("coroutine"): "kotlinx.coroutines.DefaultExecutor @coroutine" at CoroutineContext.kt:308
                                            updateThreadContext_u24lambda_u240.append('#'): "kotlinx.coroutines.DefaultExecutor @coroutine#" at CoroutineContext.kt:309
                                            updateThreadContext_u24lambda_u240.append(2): "kotlinx.coroutines.DefaultExecutor @coroutine#2" at CoroutineContext.kt:310
                                            "kotlinx.coroutines.DefaultExecutor @coroutine#2".toString(): "kotlinx.coroutines.DefaultExecutor @coroutine#2" at CoroutineContext.kt:305
                                            currentThread.setName("kotlinx.coroutines.DefaultExecutor @coroutine#2") at CoroutineContext.kt:305
                                      oldValue = "kotlinx.coroutines.DefaultExecutor @coroutine#1" at CoroutineContext.kt:104
                                      CoroutineContextKt.updateUndispatchedCompletion(EventLoopsTest$testEventLoopInDefaultExecutor$1$1$2@1, CombinedContext@1, "kotlinx.coroutines.DefaultExecutor @coroutine#1"): null at CoroutineContext.kt:107
                                        context.get(UndispatchedMarker@1): null at CoroutineContext.kt:134
                                          ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, UndispatchedMarker@1): null at CoroutineDispatcher.kt:60
                                          Job.DefaultImpls.get(BlockingCoroutine@1, UndispatchedMarker@1): null at JobSupport.kt:22
                                            CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, UndispatchedMarker@1): null at Job.kt:118
                                        potentiallyHasUndispatchedCoroutine = 0 at CoroutineContext.kt:134
                                      undispatchedCompletion = null at CoroutineContext.kt:105
                                      i$a$-withContinuationContext-DispatchedTask$run$2 = 0 at CoroutineContext.kt:112
                                      .withContinuationContext$Lambda() at CoroutineContext.kt:112
                                        continuation.getContext(): CombinedContext@1 at DispatchedTask.kt:83
                                        context = CombinedContext@1 at DispatchedTask.kt:83
                                        takeState(): Unit at DispatchedTask.kt:84
                                          state = Unit at DispatchedContinuation.kt:179
                                          DebugKt.getASSERTIONS_ENABLED(): true at DispatchedContinuation.kt:180
                                          i$a$-assert-DispatchedContinuation$takeState$1 = 0 at fake.kt:1
                                          DispatchedContinuationKt.access$getUNDEFINED$p(): Symbol@1 at DispatchedContinuation.kt:180
                                          DispatchedContinuationKt.access$getUNDEFINED$p(): Symbol@1 at DispatchedContinuation.kt:181
                                          _state = Symbol@1 at DispatchedContinuation.kt:181
                                        state = Unit at DispatchedTask.kt:84
                                        getExceptionalResult(Unit): null at DispatchedTask.kt:85
                                        exception = null at DispatchedTask.kt:85
                                        DispatchedTaskKt.isCancellableMode(1): true at DispatchedTask.kt:91
                                        context.get(Job.Key@1): BlockingCoroutine@1 at DispatchedTask.kt:91
                                          ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, Job.Key@1): null at CoroutineDispatcher.kt:60
                                          Job.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at JobSupport.kt:22
                                            CoroutineContext.Element.DefaultImpls.get(BlockingCoroutine@1, Job.Key@1): BlockingCoroutine@1 at Job.kt:118
                                        job = BlockingCoroutine@1 at DispatchedTask.kt:91
                                        job.isActive(): true at DispatchedTask.kt:92
                                          isActive(): true at AbstractCoroutine.kt:64
                                            getState(): Empty@1 at JobSupport.kt:175
                                              JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                                            state = Empty@1 at JobSupport.kt:175
                                            state.isActive(): true at JobSupport.kt:176
                                        getSuccessfulResult(Unit): Unit at DispatchedTask.kt:100
                                        Result.constructor-impl(Unit): Unit at DispatchedTask.kt:100
                                        continuation.resumeWith(Unit) at DispatchedTask.kt:100
                                          ResultKt.throwOnFailure(Unit) at EventLoopsTest.kt:64
                                          expect(5) at EventLoopsTest.kt:65
                                            orderedExecutionDelegate.expect(5) at TestBase.common.kt:193
                                          ContinuationInterceptor.DefaultImpls.get(DefaultExecutor@1, ContinuationInterceptor.Key@1): DefaultExecutor@1 at CoroutineDispatcher.kt:60
                                          dispatched = DispatchedContinuation@1 at CoroutineDispatcher.kt:248
                                          dispatched.release() at CoroutineDispatcher.kt:249
                                            awaitReusability() at DispatchedContinuation.kt:83
                                              this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:71
                                              DispatchedContinuation.get_reusableCancellableContinuation$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:71
                                              handler$atomicfu = AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:71
                                              handler$atomicfu.get(DispatchedContinuation@1): null at DispatchedContinuation.kt:71
                                              it = null at DispatchedContinuation.kt:71
                                              i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Any-DispatchedContinuation$awaitReusability$1 = 0 at DispatchedContinuation.kt:71
                                            getReusableCancellableContinuation(): null at DispatchedContinuation.kt:84
                                              DispatchedContinuation.get_reusableCancellableContinuation$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:0
                                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedContinuation@1): null at DispatchedContinuation.kt:55
                                          CompletionStateKt.toState(Unit): Unit at AbstractCoroutine.kt:99
                                            Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                                          makeCompletingOnce(Unit): Unit at AbstractCoroutine.kt:99
                                            this_ = BlockingCoroutine@1 at JobSupport.kt:858
                                            i$f$loopOnState = 0 at JobSupport.kt:858
                                            getState(): Empty@1 at JobSupport.kt:170
                                              JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Empty@1 at JobSupport.kt:163
                                            state = Empty@1 at JobSupport.kt:170
                                            i$a$-loopOnState-JobSupport$makeCompletingOnce$1 = 0 at JobSupport.kt:170
                                            tryMakeCompleting(Empty@1, Unit): Unit at JobSupport.kt:859
                                              tryFinalizeSimpleState(Empty@1, Unit): true at JobSupport.kt:887
                                                DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:283
                                                i$a$-assert-JobSupport$tryFinalizeSimpleState$1 = 0 at fake.kt:1
                                                DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:284
                                                JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:285
                                                JobSupportKt.boxIncomplete(Unit): Unit at JobSupport.kt:285
                                                AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(BlockingCoroutine@1, Empty@1, Unit): true at JobSupport.kt:285
                                                onCancelling(null) at JobSupport.kt:286
                                                onCompletionInternal(Unit) at JobSupport.kt:287
                                                  onCompleted(Unit) at AbstractCoroutine.kt:92
                                                completeStateFinalization(Empty@1, Unit) at JobSupport.kt:288
                                                  getParentHandle(): NonDisposableHandle@1 at JobSupport.kt:300
                                                    JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): NonDisposableHandle@1 at JobSupport.kt:129
                                                  it = NonDisposableHandle@1 at JobSupport.kt:300
                                                  i$a$-let-JobSupport$completeStateFinalization$1 = 0 at JobSupport.kt:300
                                                  it.dispose() at JobSupport.kt:301
                                                  setParentHandle(NonDisposableHandle@1) at JobSupport.kt:302
                                                    JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(BlockingCoroutine@1, NonDisposableHandle@1) at JobSupport.kt:130
                                                  cause = null at JobSupport.kt:304
                                                  state.getList(): null at JobSupport.kt:316
                                            finalState = Unit at JobSupport.kt:859
                                            JobSupportKt.access$getCOMPLETING_ALREADY$p(): Symbol@1 at JobSupport.kt:861
                                            JobSupportKt.access$getCOMPLETING_RETRY$p(): Symbol@1 at JobSupport.kt:866
                                          state = Unit at AbstractCoroutine.kt:99
                                          afterResume(Unit) at AbstractCoroutine.kt:101
                                            afterCompletion(Unit) at AbstractCoroutine.kt:113
                                              Thread.currentThread(): Thread@1 at Builders.kt:83
                                      i$a$-withContinuationContext-DispatchedTask$run$2 = Unit at CoroutineContext.kt:112
                                      ThreadContextKt.restoreThreadContext(CombinedContext@1, "kotlinx.coroutines.DefaultExecutor @coroutine#1") at CoroutineContext.kt:115
                                        context.fold(null, ThreadContextKt$$Lambda@1): CoroutineId@1 at ThreadContext.kt:89
                                        element = CoroutineId@1 at ThreadContext.kt:88
                                        element.restoreThreadContext(CombinedContext@1, "kotlinx.coroutines.DefaultExecutor @coroutine#1") at ThreadContext.kt:90
                                          restoreThreadContext(CombinedContext@1, "kotlinx.coroutines.DefaultExecutor @coroutine#1") at CoroutineContext.kt:289
                                            Thread.currentThread(): Thread@1 at CoroutineContext.kt:316
                                            Thread@1.setName("kotlinx.coroutines.DefaultExecutor @coroutine#1") at CoroutineContext.kt:316
                                  parkNanos = 0 at Builders.kt:94
                                  isCompleted(): true at Builders.kt:96
                                    getState(): Unit at JobSupport.kt:179
                                      JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                      AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Unit at JobSupport.kt:163
                                  DefaultExecutor@1.decrementUseCount(false) at Builders.kt:101
                                    delta(false): 1 at EventLoop.common.kt:105
                                    useCount = 4294967297 at EventLoop.common.kt:105
                                  AbstractTimeSourceKt.access$getTimeSource$p(): null at Builders.kt:104
                                  getState(): Unit at Builders.kt:107
                                    JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): Unit at JobSupport.kt:163
                                  JobSupportKt.unboxState(Unit): Unit at Builders.kt:107
                        ContinuationInterceptor.DefaultImpls.get(Unconfined@1, ContinuationInterceptor.Key@1): Unconfined@1 at CoroutineDispatcher.kt:60
                        dispatched = DispatchedContinuation@1 at CoroutineDispatcher.kt:248
                        dispatched.release() at CoroutineDispatcher.kt:249
                          awaitReusability() at DispatchedContinuation.kt:83
                            this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:71
                            DispatchedContinuation.get_reusableCancellableContinuation$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:71
                            handler$atomicfu = AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:71
                            handler$atomicfu.get(DispatchedContinuation@1): null at DispatchedContinuation.kt:71
                            it = null at DispatchedContinuation.kt:71
                            i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Any-DispatchedContinuation$awaitReusability$1 = 0 at DispatchedContinuation.kt:71
                          getReusableCancellableContinuation(): null at DispatchedContinuation.kt:84
                            DispatchedContinuation.get_reusableCancellableContinuation$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at DispatchedContinuation.kt:0
                            AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedContinuation@1): null at DispatchedContinuation.kt:55
                        CompletionStateKt.toState(Unit): Unit at AbstractCoroutine.kt:99
                          Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                        makeCompletingOnce(Unit): Unit at AbstractCoroutine.kt:99
                          this_ = DispatchedCoroutine@1 at JobSupport.kt:858
                          i$f$loopOnState = 0 at JobSupport.kt:858
                          getState(): Empty@1 at JobSupport.kt:170
                            JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                            AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): Empty@1 at JobSupport.kt:163
                          state = Empty@1 at JobSupport.kt:170
                          i$a$-loopOnState-JobSupport$makeCompletingOnce$1 = 0 at JobSupport.kt:170
                          tryMakeCompleting(Empty@1, Unit): Unit at JobSupport.kt:859
                            tryFinalizeSimpleState(Empty@1, Unit): true at JobSupport.kt:887
                              DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:283
                              i$a$-assert-JobSupport$tryFinalizeSimpleState$1 = 0 at fake.kt:1
                              DebugKt.getASSERTIONS_ENABLED(): true at JobSupport.kt:284
                              JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:285
                              JobSupportKt.boxIncomplete(Unit): Unit at JobSupport.kt:285
                              AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(DispatchedCoroutine@1, Empty@1, Unit): true at JobSupport.kt:285
                              onCancelling(null) at JobSupport.kt:286
                              onCompletionInternal(Unit) at JobSupport.kt:287
                                onCompleted(Unit) at AbstractCoroutine.kt:92
                              completeStateFinalization(Empty@1, Unit) at JobSupport.kt:288
                                getParentHandle(): ChildHandleNode@1 at JobSupport.kt:300
                                  JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                  AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(DispatchedCoroutine@1): ChildHandleNode@1 at JobSupport.kt:129
                                it = ChildHandleNode@1 at JobSupport.kt:300
                                i$a$-let-JobSupport$completeStateFinalization$1 = 0 at JobSupport.kt:300
                                it.dispose() at JobSupport.kt:301
                                  getJob(): BlockingCoroutine@1 at JobSupport.kt:1475
                                  BlockingCoroutine@1.removeNode(ChildHandleNode@1) at JobSupport.kt:1475
                                    this_ = BlockingCoroutine@1 at JobSupport.kt:621
                                    i$f$loopOnState = 0 at JobSupport.kt:621
                                    getState(): ChildHandleNode@1 at JobSupport.kt:170
                                      JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                      AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.get(BlockingCoroutine@1): ChildHandleNode@1 at JobSupport.kt:163
                                    state = ChildHandleNode@1 at JobSupport.kt:170
                                    i$a$-loopOnState-JobSupport$removeNode$1 = 0 at JobSupport.kt:170
                                    JobSupport.get_state$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:626
                                    JobSupportKt.access$getEMPTY_ACTIVE$p(): Empty@1 at JobSupport.kt:626
                                    AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.compareAndSet(BlockingCoroutine@1, ChildHandleNode@1, Empty@1): true at JobSupport.kt:626
                                setParentHandle(NonDisposableHandle@1) at JobSupport.kt:302
                                  JobSupport.get_parentHandle$volatile$FU(): AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1 at JobSupport.kt:0
                                  AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl@1.set(DispatchedCoroutine@1, NonDisposableHandle@1) at JobSupport.kt:130
                                cause = null at JobSupport.kt:304
                                state.getList(): null at JobSupport.kt:316
                          finalState = Unit at JobSupport.kt:859
                          JobSupportKt.access$getCOMPLETING_ALREADY$p(): Symbol@1 at JobSupport.kt:861
                          JobSupportKt.access$getCOMPLETING_RETRY$p(): Symbol@1 at JobSupport.kt:866
                        state = Unit at AbstractCoroutine.kt:99
                        afterResume(Unit) at AbstractCoroutine.kt:101
                          tryResume(): false at Builders.common.kt:254
                            this_ = DispatchedCoroutine@1 at Builders.common.kt:237
                            DispatchedCoroutine.get_decision$volatile$FU(): AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at Builders.common.kt:237
                            handler$atomicfu = AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl@1 at Builders.common.kt:237
                            handler$atomicfu.get(DispatchedCoroutine@1): 1 at Builders.common.kt:237
                            decision = 1 at Builders.common.kt:237
                            i$a$-loop$atomicfu$ATOMIC_FIELD_UPDATER$Int-DispatchedCoroutine$tryResume$1 = 0 at Builders.common.kt:237
                          CompletionStateKt.recoverResult(Unit, EventLoopsTest$testEventLoopInDefaultExecutor$1@1): Unit at Builders.common.kt:256
                            Result.constructor-impl(Unit): Unit at CompletionState.kt:18
                          DispatchedContinuationKt.resumeCancellableWith(DispatchedContinuation@1, Unit) at Builders.common.kt:256
                            this_ = DispatchedContinuation@1 at DispatchedContinuation.kt:278
                            i$f$resumeCancellableWith$kotlinx_coroutines_core = 0 at DispatchedContinuation.kt:278
                            DispatchedContinuation@1.resumeCancellableWith() at DispatchedContinuation.kt:278
                              CompletionStateKt.toState(Unit): Unit at DispatchedContinuation.kt:207
                                Result.exceptionOrNull-impl(Unit): null at CompletionState.kt:8
                              state = Unit at DispatchedContinuation.kt:207
                              getContext(): CombinedContext@1 at DispatchedContinuation.kt:208
                                continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                              DispatchedContinuationKt.safeIsDispatchNeeded(BlockingEventLoop@1, CombinedContext@1): true at DispatchedContinuation.kt:208
                                safeIsDispatchNeeded.isDispatchNeeded(CombinedContext@1): true at DispatchedContinuation.kt:262
                              _state = Unit at DispatchedContinuation.kt:209
                              resumeMode = 1 at DispatchedContinuation.kt:210
                              getContext(): CombinedContext@1 at DispatchedContinuation.kt:211
                                continuation.getContext(): CombinedContext@1 at DispatchedContinuation.kt:0
                              DispatchedContinuationKt.safeDispatch(BlockingEventLoop@1, CombinedContext@1, DispatchedContinuation@1) at DispatchedContinuation.kt:211
                                safeDispatch.dispatch(CombinedContext@1, DispatchedContinuation@1) at DispatchedContinuation.kt:254
                    i$a$-withContinuationContext-DispatchedContinuation$resumeUndispatchedWith$1 = Unit at CoroutineContext.kt:112
                    ThreadContextKt.restoreThreadContext(CombinedContext@1, "kotlinx.coroutines.DefaultExecutor") at CoroutineContext.kt:115
                      context.fold(null, ThreadContextKt$$Lambda@1): CoroutineId@1 at ThreadContext.kt:89
                      element = CoroutineId@1 at ThreadContext.kt:88
                      element.restoreThreadContext(CombinedContext@1, "kotlinx.coroutines.DefaultExecutor") at ThreadContext.kt:90
                        restoreThreadContext(CombinedContext@1, "kotlinx.coroutines.DefaultExecutor") at CoroutineContext.kt:289
                          Thread.currentThread(): Thread@1 at CoroutineContext.kt:316
                          Thread@1.setName("kotlinx.coroutines.DefaultExecutor") at CoroutineContext.kt:316
            eventLoop.processUnconfinedEvent(): false at DispatchedTask.kt:189
            eventLoop.decrementUseCount(true) at DispatchedTask.kt:198
              delta(true): 4294967296 at EventLoop.common.kt:105
              useCount = 1 at EventLoop.common.kt:105
