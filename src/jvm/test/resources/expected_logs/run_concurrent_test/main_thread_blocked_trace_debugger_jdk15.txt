= Concurrent test has hung =

The following interleaving leads to the error:
| -------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                                    Main Thread                                                                     |
| -------------------------------------------------------------------------------------------------------------------------------------------------- |
| $this_runCatching.block() at BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:47) |
|   block() at MainThreadBlockedRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:96)                                        |
|     q.take() at MainThreadBlockedRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:101)                                    |
|       lock.lockInterruptibly() at ArrayBlockingQueue.take(ArrayBlockingQueue.java:417)                                                             |
|       count ➜ 0 at ArrayBlockingQueue.take(ArrayBlockingQueue.java:419)                                                                            |
|       notEmpty.await() at ArrayBlockingQueue.take(ArrayBlockingQueue.java:420)                                                                     |
|         enableWait(ConditionNode#1): 1 at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1605)                   |
|         LockSupport.setCurrentBlocker(ConditionObject#1) at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1606) |
|         canReacquire(ConditionNode#1): false at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1608)             |
|         node.status ➜ 3 at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1612)                                  |
|         ForkJoinPool.managedBlock(ConditionNode#1) at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1614)       |
|           blocker.isReleasable(): false at ForkJoinPool.managedBlock(ForkJoinPool.java:3136)                                                       |
|           blocker.block() at ForkJoinPool.managedBlock(ForkJoinPool.java:3137)                                                                     |
|             isReleasable(): false at AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:505)                           |
|             LockSupport.park() at AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:505)                              |
|               PARK at LockSupport.park(LockSupport.java:341)                                                                                       |
| -------------------------------------------------------------------------------------------------------------------------------------------------- |
All unfinished threads are in deadlock

Detailed trace:
| ------------------------------------------------------------------------------------------------------------------------------------------------------------ |
|                                                                         Main Thread                                                                          |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| $this_runCatching.block() at BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:47)           |
|   block() at MainThreadBlockedRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:96)                                                  |
|     q.take() at MainThreadBlockedRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:101)                                              |
|       lock.lockInterruptibly() at ArrayBlockingQueue.take(ArrayBlockingQueue.java:417)                                                                       |
|         sync.lockInterruptibly() at ReentrantLock.lockInterruptibly(ReentrantLock.java:372)                                                                  |
|           initialTryLock(): true at ReentrantLock$Sync.lockInterruptibly(ReentrantLock.java:160)                                                             |
|             compareAndSetState(0, 1): true at ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:225)                                               |
|               Unsafe#1.compareAndSetInt(NonfairSync#1, 16, 0, 1): true at AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:555) |
|             setExclusiveOwnerThread(Thread#0) at ReentrantLock$NonfairSync.initialTryLock(ReentrantLock.java:226)                                            |
|               exclusiveOwnerThread = Thread#0 at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)                    |
|       count ➜ 0 at ArrayBlockingQueue.take(ArrayBlockingQueue.java:419)                                                                                      |
|       notEmpty.await() at ArrayBlockingQueue.take(ArrayBlockingQueue.java:420)                                                                               |
|         enableWait(ConditionNode#1): 1 at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1605)                             |
|           this$0.isHeldExclusively(): true at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1501)                    |
|             getExclusiveOwnerThread(): Thread#0 at ReentrantLock$Sync.isHeldExclusively(ReentrantLock.java:186)                                              |
|               exclusiveOwnerThread ➜ Thread#0 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)                    |
|           node.waiter = Thread#0 at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1502)                              |
|           node.setStatusRelaxed(3) at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1503)                            |
|             Unsafe#1.putInt(ConditionNode#1, 12, 3) at AbstractQueuedSynchronizer$Node.setStatusRelaxed(AbstractQueuedSynchronizer.java:473)                 |
|           lastWaiter ➜ null at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1504)                                   |
|           firstWaiter = ConditionNode#1 at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1506)                       |
|           lastWaiter = ConditionNode#1 at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1509)                        |
|           this$0.getState(): 1 at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1510)                                |
|             state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:531)                                                            |
|           this$0.release(1): true at AbstractQueuedSynchronizer$ConditionObject.enableWait(AbstractQueuedSynchronizer.java:1511)                             |
|             tryRelease(1): true at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1006)                                                  |
|               getState(): 1 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:173)                                                                         |
|                 state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:531)                                                        |
|               getExclusiveOwnerThread(): Thread#0 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:174)                                                   |
|                 exclusiveOwnerThread ➜ Thread#0 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)                  |
|               setExclusiveOwnerThread(null) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:178)                                                         |
|                 exclusiveOwnerThread = null at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)                      |
|               setState(0) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:179)                                                                           |
|                 state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:540)                                                        |
|             head ➜ null at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1007)                                                          |
|         LockSupport.setCurrentBlocker(ConditionObject#1) at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1606)           |
|           Unsafe#1.putReferenceOpaque(Thread#0, 76, ConditionObject#1) at LockSupport.setCurrentBlocker(LockSupport.java:161)                                |
|         canReacquire(ConditionNode#1): false at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1608)                       |
|           node.prev ➜ null at AbstractQueuedSynchronizer$ConditionObject.canReacquire(AbstractQueuedSynchronizer.java:1526)                                  |
|         node.status ➜ 3 at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1612)                                            |
|         ForkJoinPool.managedBlock(ConditionNode#1) at AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1614)                 |
|           blocker.isReleasable(): false at ForkJoinPool.managedBlock(ForkJoinPool.java:3136)                                                                 |
|             status ➜ 3 at AbstractQueuedSynchronizer$ConditionNode.isReleasable(AbstractQueuedSynchronizer.java:501)                                         |
|           blocker.block() at ForkJoinPool.managedBlock(ForkJoinPool.java:3137)                                                                               |
|             isReleasable(): false at AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:505)                                     |
|               status ➜ 3 at AbstractQueuedSynchronizer$ConditionNode.isReleasable(AbstractQueuedSynchronizer.java:501)                                       |
|             LockSupport.park() at AbstractQueuedSynchronizer$ConditionNode.block(AbstractQueuedSynchronizer.java:505)                                        |
|               PARK at LockSupport.park(LockSupport.java:341)                                                                                                 |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------ |
All unfinished threads are in deadlock
