= Concurrent test failed =

java.lang.IllegalStateException: Check failed.
	at org.jetbrains.kotlinx.lincheck_test.representation.AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:161)
	at org.jetbrains.kotlinx.lincheck_test.representation.AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:124)
	at org.jetbrains.kotlinx.lincheck_test.representation.BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:47)
	at java.base/java.lang.Thread.run(Thread.java:840)

The following interleaving leads to the error:
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                                                    Thread 1                                                                                     |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| $this_runCatching.block(): threw IllegalStateException at BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:47) |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |

Detailed trace:
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                                                    Thread 1                                                                                     |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| $this_runCatching.block(): threw IllegalStateException at BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:47) |
|   block(): threw IllegalStateException at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:124)                                   |
|     AtomicReference#1.get(): Node#1 at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:129)                                      |
|     AtomicReference#1.compareAndSet(Node#1, Node#2): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:129)                |
|     AtomicReference#1.set(Node#3) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:130)                                        |
|     AtomicInteger#1.get(): 0 at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:132)                                             |
|     AtomicInteger#1.compareAndSet(0, 2): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:132)                            |
|     AtomicInteger#1.set(3) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:133)                                               |
|     AtomicLong#1.get(): 0 at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:135)                                                |
|     AtomicLong#1.compareAndSet(0, 2): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:135)                               |
|     AtomicLong#1.set(3) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:136)                                                  |
|     AtomicBoolean#1.get(): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:138)                                          |
|     AtomicBoolean#1.compareAndSet(true, true): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:138)                      |
|     AtomicBoolean#1.set(false) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:139)                                           |
|     AtomicReferenceArray#1[0].get(): Node#4 at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:141)                              |
|     AtomicReferenceArray#1[0].compareAndSet(Node#4, Node#5): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:141)        |
|     AtomicReferenceArray#1[0].set(Node#6) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:142)                                |
|     AtomicIntegerArray#1[0].get(): 0 at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:144)                                     |
|     AtomicIntegerArray#1[0].compareAndSet(0, 1): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:144)                    |
|     AtomicIntegerArray#1[0].set(2) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:145)                                       |
|     AtomicLongArray#1[0].get(): 0 at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:147)                                        |
|     AtomicLongArray#1[0].compareAndSet(0, 1): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:147)                       |
|     AtomicLongArray#1[0].set(2) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:148)                                          |
|     AtomicReference#2.set(Node#7) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:150)                                        |
|     AtomicIntegerArray#2[0].compareAndSet(1, 2): false at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:151)                   |
|     AtomicInteger#2.compareAndSet(0, 2): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:153)                            |
|     AtomicInteger#2.set(0) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:154)                                               |
|     AtomicInteger#3.compareAndSet(1, 2): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:156)                            |
|     AtomicInteger#3.set(3) at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:157)                                               |
|     AtomicIntegerArray#3[1].compareAndSet(0, 1): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:159)                    |
|     AtomicIntegerArray#4[1].compareAndSet(0, 1): true at AtomicReferencesNamesRunConcurrentRepresentationTest.block(RunConcurrentRepresentationTests.kt:160)                    |
|   result: IllegalStateException #1                                                                                                                                              |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
