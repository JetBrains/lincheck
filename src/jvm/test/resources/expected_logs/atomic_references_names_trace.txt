= Invalid execution results =
| -------------- |
|    Thread 1    |
| -------------- |
| operation(): 1 |
| -------------- |

The following interleaving leads to the error:
| -------------- |
|    Thread 1    |
| -------------- |
| operation(): 1 |
| -------------- |

Detailed trace:
| ----------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                                       Thread 1                                                                        |
| ----------------------------------------------------------------------------------------------------------------------------------------------------- |
| operation(): 1                                                                                                                                        |
|   actionsForTrace() at BaseTraceRepresentationTest.operation(BaseTraceRepresentationTest.kt:27)                                                       |
|     atomicReference.get(): Node#1 at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:29)                                      |
|     atomicReference.compareAndSet(Node#1,Node#2): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:29)                 |
|     atomicReference.set(Node#3) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:30)                                        |
|     atomicInteger.get(): 0 at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:32)                                             |
|     atomicInteger.compareAndSet(0,2): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:32)                             |
|     atomicInteger.set(3) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:33)                                               |
|     atomicLong.get(): 0 at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:35)                                                |
|     atomicLong.compareAndSet(0,2): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:35)                                |
|     atomicLong.set(3) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:36)                                                  |
|     atomicBoolean.get(): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:38)                                          |
|     atomicBoolean.compareAndSet(true,true): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:38)                       |
|     atomicBoolean.set(false) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:39)                                           |
|     atomicReferenceArray[0].get(): Node#4 at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:41)                              |
|     atomicReferenceArray[0].compareAndSet(Node#4,Node#5): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:41)         |
|     atomicReferenceArray[0].set(Node#6) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:42)                                |
|     atomicIntegerArray[0].get(): 0 at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:44)                                     |
|     atomicIntegerArray[0].compareAndSet(0,1): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:44)                     |
|     atomicIntegerArray[0].set(2) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:45)                                       |
|     atomicLongArray[0].get(): 0 at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:47)                                        |
|     atomicLongArray[0].compareAndSet(0,1): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:47)                        |
|     atomicLongArray[0].set(2) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:48)                                          |
|     wrapper.reference.set(Node#7) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:50)                                      |
|     wrapper.array[0].compareAndSet(1,2): false at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:51)                         |
|     AtomicReferencesNamesTest.staticValue.compareAndSet(0,2): true at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:53)     |
|     AtomicReferencesNamesTest.staticValue.set(0) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:54)                       |
|     AtomicReferenceWrapper.staticValue.compareAndSet(1,2): false at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:56)       |
|     AtomicReferenceWrapper.staticValue.set(3) at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:57)                          |
|     AtomicReferencesNamesTest.staticArray[1].compareAndSet(0,1): false at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:59) |
|     AtomicReferenceWrapper.staticArray[1].compareAndSet(0,1): false at AtomicReferencesNamesTest.actionsForTrace(AtomicReferencesNamesTests.kt:60)    |
|   result: 1                                                                                                                                           |
| ----------------------------------------------------------------------------------------------------------------------------------------------------- |
