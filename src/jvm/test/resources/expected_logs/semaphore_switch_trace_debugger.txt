= Concurrent test failed =

java.lang.IllegalStateException: Check failed.
	at org.jetbrains.kotlinx.lincheck_test.representation.SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:49)
	at org.jetbrains.kotlinx.lincheck_test.representation.SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:31)
	at org.jetbrains.kotlinx.lincheck_test.representation.BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:48)
	at java.base/java.lang.Thread.run(Unknown Source)

The following interleaving leads to the error:
| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                                                   Main Thread                                                                                   |                                                   Thread 1                                                    |                                                   Thread 2                                                    |
| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| $this_runCatching.block(): threw IllegalStateException at BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:48) |                                                                                                               |                                                                                                               |
|   block(): threw IllegalStateException at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:31)                                                       |                                                                                                               |                                                                                                               |
|     NonfairSync#1.state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:541)                                                                         |                                                                                                               |                                                                                                               |
|     NonfairSync#2.state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:541)                                                                         |                                                                                                               |                                                                                                               |
|     thread(block = Lambda#2): Thread#1 at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:37)                                                       |                                                                                                               |                                                                                                               |
|     thread(block = Lambda#3): Thread#2 at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:42)                                                       |                                                                                                               |                                                                                                               |
|     switch (reason: waiting for Thread 1 to finish)                                                                                                                             |                                                                                                               |                                                                                                               |
|                                                                                                                                                                                 | run()                                                                                                         |                                                                                                               |
|                                                                                                                                                                                 |   $semB.release() at SemaphoreSwitchRepresentationTest.block$lambda$0(ReentrantLockRepresentationTests.kt:38) |                                                                                                               |
|                                                                                                                                                                                 |   $semA.acquire() at SemaphoreSwitchRepresentationTest.block$lambda$0(ReentrantLockRepresentationTests.kt:39) |                                                                                                               |
|                                                                                                                                                                                 |     PARK at LockSupport.park(LockSupport.java:211)                                                            |                                                                                                               |
|                                                                                                                                                                                 |     switch (reason: thread is parked)                                                                         |                                                                                                               |
|                                                                                                                                                                                 |                                                                                                               | run()                                                                                                         |
|                                                                                                                                                                                 |                                                                                                               |   $semB.acquire() at SemaphoreSwitchRepresentationTest.block$lambda$1(ReentrantLockRepresentationTests.kt:43) |
|                                                                                                                                                                                 |                                                                                                               |   $semA.release() at SemaphoreSwitchRepresentationTest.block$lambda$1(ReentrantLockRepresentationTests.kt:44) |
|     Thread#1.join() at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:47)                                                                          |                                                                                                               |                                                                                                               |
|     Thread#2.join() at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:48)                                                                          |                                                                                                               |                                                                                                               |
|   result: IllegalStateException #1                                                                                                                                              |                                                                                                               |                                                                                                               |
| --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |

Detailed trace:
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
|                                                                                   Main Thread                                                                                   |                                                                    Thread 1                                                                    |                                                   Thread 2                                                    |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| $this_runCatching.block(): threw IllegalStateException at BaseRunConcurrentRepresentationTest.testRunWithModelChecker$lambda$1$lambda$0(RunConcurrentRepresentationTests.kt:48) |                                                                                                                                                |                                                                                                               |
|   block(): threw IllegalStateException at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:31)                                                       |                                                                                                                                                |                                                                                                               |
|     NonfairSync#1.state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:541)                                                                         |                                                                                                                                                |                                                                                                               |
|     NonfairSync#2.state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:541)                                                                         |                                                                                                                                                |                                                                                                               |
|     thread(block = Lambda#2): Thread#1 at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:37)                                                       |                                                                                                                                                |                                                                                                               |
|     thread(block = Lambda#3): Thread#2 at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:42)                                                       |                                                                                                                                                |                                                                                                               |
|     switch (reason: waiting for Thread 1 to finish)                                                                                                                             |                                                                                                                                                |                                                                                                               |
|                                                                                                                                                                                 | run()                                                                                                                                          |                                                                                                               |
|                                                                                                                                                                                 |   $semB.release() at SemaphoreSwitchRepresentationTest.block$lambda$0(ReentrantLockRepresentationTests.kt:38)                                  |                                                                                                               |
|                                                                                                                                                                                 |   $semA.acquire() at SemaphoreSwitchRepresentationTest.block$lambda$0(ReentrantLockRepresentationTests.kt:39)                                  |                                                                                                               |
|                                                                                                                                                                                 |     sync.acquireSharedInterruptibly(1) at Semaphore.acquire(Semaphore.java:318)                                                                |                                                                                                               |
|                                                                                                                                                                                 |       tryAcquireShared(1): -1 at AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1046)                   |                                                                                                               |
|                                                                                                                                                                                 |       acquire(null, 1, true, true, false, 0): 1 at AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1047) |                                                                                                               |
|                                                                                                                                                                                 |         tryAcquireShared(1): -1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:670)                                     |                                                                                                               |
|                                                                                                                                                                                 |         node.prev ➜ null at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:656)                                            |                                                                                                               |
|                                                                                                                                                                                 |         tryAcquireShared(1): -1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:670)                                     |                                                                                                               |
|                                                                                                                                                                                 |         node.waiter = Thread#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:697)                                      |                                                                                                               |
|                                                                                                                                                                                 |         tail ➜ null at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:698)                                                 |                                                                                                               |
|                                                                                                                                                                                 |         node.setPrevRelaxed(null) at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:699)                                   |                                                                                                               |
|                                                                                                                                                                                 |         tryInitializeHead() at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:701)                                         |                                                                                                               |
|                                                                                                                                                                                 |         node.prev ➜ null at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:656)                                            |                                                                                                               |
|                                                                                                                                                                                 |         tryAcquireShared(1): -1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:670)                                     |                                                                                                               |
|                                                                                                                                                                                 |         node.waiter = Thread#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:697)                                      |                                                                                                               |
|                                                                                                                                                                                 |         tail ➜ ExclusiveNode#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:698)                                      |                                                                                                               |
|                                                                                                                                                                                 |         node.setPrevRelaxed(ExclusiveNode#1) at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:699)                        |                                                                                                               |
|                                                                                                                                                                                 |         casTail(ExclusiveNode#1, SharedNode#1): true at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:702)                |                                                                                                               |
|                                                                                                                                                                                 |         head.next = SharedNode#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:705)                                    |                                                                                                               |
|                                                                                                                                                                                 |         node.prev ➜ ExclusiveNode#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:656)                                 |                                                                                                               |
|                                                                                                                                                                                 |         head ➜ ExclusiveNode#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:656)                                      |                                                                                                               |
|                                                                                                                                                                                 |         tryAcquireShared(1): -1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:670)                                     |                                                                                                               |
|                                                                                                                                                                                 |         node.status ➜ 0 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:709)                                             |                                                                                                               |
|                                                                                                                                                                                 |         node.status = 1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:710)                                             |                                                                                                               |
|                                                                                                                                                                                 |         tryAcquireShared(1): -1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:670)                                     |                                                                                                               |
|                                                                                                                                                                                 |         node.status ➜ 1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:709)                                             |                                                                                                               |
|                                                                                                                                                                                 |         LockSupport.park(NonfairSync#4) at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:715)                             |                                                                                                               |
|                                                                                                                                                                                 |           LockSupport.setBlocker(Thread#1, NonfairSync#4) at LockSupport.park(LockSupport.java:210)                                            |                                                                                                               |
|                                                                                                                                                                                 |           PARK at LockSupport.park(LockSupport.java:211)                                                                                       |                                                                                                               |
|                                                                                                                                                                                 |           switch (reason: thread is parked)                                                                                                    |                                                                                                               |
|                                                                                                                                                                                 |                                                                                                                                                | run()                                                                                                         |
|                                                                                                                                                                                 |                                                                                                                                                |   $semB.acquire() at SemaphoreSwitchRepresentationTest.block$lambda$1(ReentrantLockRepresentationTests.kt:43) |
|                                                                                                                                                                                 |                                                                                                                                                |   $semA.release() at SemaphoreSwitchRepresentationTest.block$lambda$1(ReentrantLockRepresentationTests.kt:44) |
|                                                                                                                                                                                 |           LockSupport.setBlocker(Thread#1, null) at LockSupport.park(LockSupport.java:212)                                                     |                                                                                                               |
|                                                                                                                                                                                 |         node.clearStatus() at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:720)                                          |                                                                                                               |
|                                                                                                                                                                                 |         tryAcquireShared(1): 0 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:670)                                      |                                                                                                               |
|                                                                                                                                                                                 |         node.prev = null at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:679)                                            |                                                                                                               |
|                                                                                                                                                                                 |         head = SharedNode#1 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:680)                                         |                                                                                                               |
|                                                                                                                                                                                 |         pred.next = null at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:681)                                            |                                                                                                               |
|                                                                                                                                                                                 |         node.waiter = null at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:682)                                          |                                                                                                               |
|                                                                                                                                                                                 |         AbstractQueuedSynchronizer.signalNextIfShared(SharedNode#1) at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:684) |                                                                                                               |
|     Thread#1.join() at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:47)                                                                          |                                                                                                                                                |                                                                                                               |
|     Thread#2.join() at SemaphoreSwitchRepresentationTest.block(ReentrantLockRepresentationTests.kt:48)                                                                          |                                                                                                                                                |                                                                                                               |
|   result: IllegalStateException #1                                                                                                                                              |                                                                                                                                                |                                                                                                               |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
