= Invalid execution results =
| -------------------------------------------- |
|        Thread 1         |      Thread 2      |
| -------------------------------------------- |
| deposit(1, 6): 6        |                    |
| -------------------------------------------- |
| transfer(1, 2, 5): void | withdraw(1, 4): -3 |
| -------------------------------------------- |

---
All operations above the horizontal line | ----- | happen before those below the line
---

The following interleaving leads to the error:
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                   Thread 1                                                   |                                                                                Thread 2                                                                                 |
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| deposit(1, 6): 6                                                                                             |                                                                                                                                                                         |
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| transfer(1, 2, 5)                                                                                            |                                                                                                                                                                         |
|   lock.lock() at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:59)                   |                                                                                                                                                                         |
|   Array<Number>#1[1] ➜ Number#1 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:60) |                                                                                                                                                                         |
|   Array<Number>#1[2] ➜ Number#2 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:61) |                                                                                                                                                                         |
|   switch                                                                                                     |                                                                                                                                                                         |
|                                                                                                              | withdraw(1, 4): -3                                                                                                                                                      |
|                                                                                                              |   Array<Number>#1[1] ➜ Number#1 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:50)                                                            |
|                                                                                                              |   account.getValue(): 6 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:51)                                                                    |
|                                                                                                              |   lock.lock() at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:52)                                                                              |
|                                                                                                              |     sync.acquire(1) at ReentrantLock.lock(ReentrantLock.java:267)                                                                                                       |
|                                                                                                              |       tryAcquire(1): false at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1239)                                                                  |
|                                                                                                              |       addWaiter(null): Node#2 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1240)                                                               |
|                                                                                                              |       acquireQueued(Node#2, 1): false at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1240)                                                       |
|                                                                                                              |         node.predecessor(): Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:910)                                                     |
|                                                                                                              |         head ➜ Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                                  |
|                                                                                                              |         tryAcquire(1): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                           |
|                                                                                                              |         AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(Node#1, Node#2): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:916) |
|                                                                                                              |         /* The following events repeat infinitely: */                                                                                                                   |
|                                                                                                              |     ┌╶> node.predecessor(): Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:910)                                                     |
|                                                                                                              |     |   head ➜ Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                                  |
|                                                                                                              |     |   tryAcquire(1): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                           |
|                                                                                                              |     |   AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(Node#1, Node#2): true at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:916)  |
|                                                                                                              |     |   parkAndCheckInterrupt(): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:917)                                                 |
|                                                                                                              |     └╶╶ switch (reason: active lock detected)                                                                                                                           |
|   from.getValue(): 6 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:62)            |                                                                                                                                                                         |
|   from.getValue(): 6 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:63)            |                                                                                                                                                                         |
|   from.setValue(1) at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:63)              |                                                                                                                                                                         |
|   to.getValue(): 0 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:64)              |                                                                                                                                                                         |
|   to.setValue(5) at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:64)                |                                                                                                                                                                         |
|   lock.unlock() at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:59)                 |                                                                                                                                                                         |
|   result: void                                                                                               |                                                                                                                                                                         |
|                                                                                                              |         node.predecessor(): Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:910)                                                     |
|                                                                                                              |         head ➜ Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                                  |
|                                                                                                              |         tryAcquire(1): true at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                            |
|                                                                                                              |         setHead(Node#2) at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:912)                                                                |
|                                                                                                              |         head.next = null at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:913)                                                               |
|                                                                                                              |   account.getValue(): 1 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:53)                                                                    |
|                                                                                                              |   account.setValue(-3) at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:53)                                                                     |
|                                                                                                              |   account.getValue(): -3 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:54)                                                                   |
|                                                                                                              |   lock.unlock() at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:54)                                                                            |
|                                                                                                              |   result: -3                                                                                                                                                            |
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |

Detailed trace:
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
|                                                                    Thread 1                                                                     |                                                                                Thread 2                                                                                 |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| deposit(1, 6): 6                                                                                                                                |                                                                                                                                                                         |
|   lock.lock() at EmptyColumnAfterMinimizeTest.deposit(EmptyColumnAfterMinimizeTest.kt:41)                                                       |                                                                                                                                                                         |
|     sync.acquire(1) at ReentrantLock.lock(ReentrantLock.java:267)                                                                               |                                                                                                                                                                         |
|       tryAcquire(1): true at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1239)                                           |                                                                                                                                                                         |
|         nonfairTryAcquire(1): true at ReentrantLock$NonfairSync.tryAcquire(ReentrantLock.java:199)                                              |                                                                                                                                                                         |
|           getState(): 0 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:128)                                                         |                                                                                                                                                                         |
|             state ➜ 0 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                               |                                                                                                                                                                         |
|           compareAndSetState(0, 1): true at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:130)                                        |                                                                                                                                                                         |
|             state.compareAndSet(0, 1): true at AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:612)               |                                                                                                                                                                         |
|           setExclusiveOwnerThread(Thread#1) at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:131)                                     |                                                                                                                                                                         |
|             exclusiveOwnerThread = Thread#1 at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)         |                                                                                                                                                                         |
|   Array<Number>#1[1] ➜ Number#1 at EmptyColumnAfterMinimizeTest.deposit(EmptyColumnAfterMinimizeTest.kt:43)                                     |                                                                                                                                                                         |
|   account.getValue(): 0 at EmptyColumnAfterMinimizeTest.deposit(EmptyColumnAfterMinimizeTest.kt:44)                                             |                                                                                                                                                                         |
|     value ➜ 0 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   account.setValue(6) at EmptyColumnAfterMinimizeTest.deposit(EmptyColumnAfterMinimizeTest.kt:44)                                               |                                                                                                                                                                         |
|     value = 6 at EmptyColumnAfterMinimizeTest$Number.setValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   account.getValue(): 6 at EmptyColumnAfterMinimizeTest.deposit(EmptyColumnAfterMinimizeTest.kt:45)                                             |                                                                                                                                                                         |
|     value ➜ 6 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   lock.unlock() at EmptyColumnAfterMinimizeTest.deposit(EmptyColumnAfterMinimizeTest.kt:45)                                                     |                                                                                                                                                                         |
|     sync.release(1): true at ReentrantLock.unlock(ReentrantLock.java:439)                                                                       |                                                                                                                                                                         |
|       tryRelease(1): true at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1302)                                           |                                                                                                                                                                         |
|         getState(): 1 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:147)                                                                  |                                                                                                                                                                         |
|           state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                 |                                                                                                                                                                         |
|         getExclusiveOwnerThread(): Thread#1 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:148)                                            |                                                                                                                                                                         |
|           exclusiveOwnerThread ➜ Thread#1 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)           |                                                                                                                                                                         |
|         setExclusiveOwnerThread(null) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:153)                                                  |                                                                                                                                                                         |
|           exclusiveOwnerThread = null at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)               |                                                                                                                                                                         |
|         setState(0) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:155)                                                                    |                                                                                                                                                                         |
|           state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:597)                                                 |                                                                                                                                                                         |
|       head ➜ null at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1303)                                                   |                                                                                                                                                                         |
|   result: 6                                                                                                                                     |                                                                                                                                                                         |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| transfer(1, 2, 5)                                                                                                                               |                                                                                                                                                                         |
|   lock.lock() at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:59)                                                      |                                                                                                                                                                         |
|     sync.acquire(1) at ReentrantLock.lock(ReentrantLock.java:267)                                                                               |                                                                                                                                                                         |
|       tryAcquire(1): true at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1239)                                           |                                                                                                                                                                         |
|         nonfairTryAcquire(1): true at ReentrantLock$NonfairSync.tryAcquire(ReentrantLock.java:199)                                              |                                                                                                                                                                         |
|           getState(): 0 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:128)                                                         |                                                                                                                                                                         |
|             state ➜ 0 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                               |                                                                                                                                                                         |
|           compareAndSetState(0, 1): true at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:130)                                        |                                                                                                                                                                         |
|             state.compareAndSet(0, 1): true at AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:612)               |                                                                                                                                                                         |
|           setExclusiveOwnerThread(Thread#1) at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:131)                                     |                                                                                                                                                                         |
|             exclusiveOwnerThread = Thread#1 at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)         |                                                                                                                                                                         |
|   Array<Number>#1[1] ➜ Number#1 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:60)                                    |                                                                                                                                                                         |
|   Array<Number>#1[2] ➜ Number#2 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:61)                                    |                                                                                                                                                                         |
|   switch                                                                                                                                        |                                                                                                                                                                         |
|                                                                                                                                                 | withdraw(1, 4): -3                                                                                                                                                      |
|                                                                                                                                                 |   Array<Number>#1[1] ➜ Number#1 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:50)                                                            |
|                                                                                                                                                 |   account.getValue(): 6 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:51)                                                                    |
|                                                                                                                                                 |     value ➜ 6 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                                                       |
|                                                                                                                                                 |   lock.lock() at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:52)                                                                              |
|                                                                                                                                                 |     sync.acquire(1) at ReentrantLock.lock(ReentrantLock.java:267)                                                                                                       |
|                                                                                                                                                 |       tryAcquire(1): false at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1239)                                                                  |
|                                                                                                                                                 |         nonfairTryAcquire(1): false at ReentrantLock$NonfairSync.tryAcquire(ReentrantLock.java:199)                                                                     |
|                                                                                                                                                 |           getState(): 1 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:128)                                                                                 |
|                                                                                                                                                 |             state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                                       |
|                                                                                                                                                 |           getExclusiveOwnerThread(): Thread#1 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:135)                                                           |
|                                                                                                                                                 |             exclusiveOwnerThread ➜ Thread#1 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)                                 |
|                                                                                                                                                 |       addWaiter(null): Node#2 at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1240)                                                               |
|                                                                                                                                                 |         tail ➜ null at AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:654)                                                                        |
|                                                                                                                                                 |         initializeSyncQueue() at AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:662)                                                              |
|                                                                                                                                                 |           head.compareAndSet(null, Node#1): true at AbstractQueuedSynchronizer.initializeSyncQueue(AbstractQueuedSynchronizer.java:2324)                                |
|                                                                                                                                                 |           tail = Node#1 at AbstractQueuedSynchronizer.initializeSyncQueue(AbstractQueuedSynchronizer.java:2325)                                                         |
|                                                                                                                                                 |         tail ➜ Node#1 at AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:654)                                                                      |
|                                                                                                                                                 |         node.setPrevRelaxed(Node#1) at AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:656)                                                        |
|                                                                                                                                                 |           prev.set(Node#1) at AbstractQueuedSynchronizer$Node.setPrevRelaxed(AbstractQueuedSynchronizer.java:542)                                                       |
|                                                                                                                                                 |         compareAndSetTail(Node#1, Node#2): true at AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:657)                                            |
|                                                                                                                                                 |           tail.compareAndSet(Node#1, Node#2): true at AbstractQueuedSynchronizer.compareAndSetTail(AbstractQueuedSynchronizer.java:2332)                                |
|                                                                                                                                                 |         oldTail.next = Node#2 at AbstractQueuedSynchronizer.addWaiter(AbstractQueuedSynchronizer.java:658)                                                              |
|                                                                                                                                                 |       acquireQueued(Node#2, 1): false at AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1240)                                                       |
|                                                                                                                                                 |         node.predecessor(): Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:910)                                                     |
|                                                                                                                                                 |           prev ➜ Node#1 at AbstractQueuedSynchronizer$Node.predecessor(AbstractQueuedSynchronizer.java:509)                                                             |
|                                                                                                                                                 |         head ➜ Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                                  |
|                                                                                                                                                 |         tryAcquire(1): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                           |
|                                                                                                                                                 |           nonfairTryAcquire(1): false at ReentrantLock$NonfairSync.tryAcquire(ReentrantLock.java:199)                                                                   |
|                                                                                                                                                 |             getState(): 1 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:128)                                                                               |
|                                                                                                                                                 |               state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                                     |
|                                                                                                                                                 |             getExclusiveOwnerThread(): Thread#1 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:135)                                                         |
|                                                                                                                                                 |               exclusiveOwnerThread ➜ Thread#1 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)                               |
|                                                                                                                                                 |         AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(Node#1, Node#2): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:916) |
|                                                                                                                                                 |           pred.waitStatus ➜ 0 at AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(AbstractQueuedSynchronizer.java:845)                                           |
|                                                                                                                                                 |           pred.compareAndSetWaitStatus(0, -1): true at AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(AbstractQueuedSynchronizer.java:867)                     |
|                                                                                                                                                 |             waitStatus.compareAndSet(0, -1): true at AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus(AbstractQueuedSynchronizer.java:533)                       |
|                                                                                                                                                 |         /* The following events repeat infinitely: */                                                                                                                   |
|                                                                                                                                                 |     ┌╶> node.predecessor(): Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:910)                                                     |
|                                                                                                                                                 |     |     prev ➜ Node#1 at AbstractQueuedSynchronizer$Node.predecessor(AbstractQueuedSynchronizer.java:509)                                                             |
|                                                                                                                                                 |     |   head ➜ Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                                  |
|                                                                                                                                                 |     |   tryAcquire(1): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                           |
|                                                                                                                                                 |     |     nonfairTryAcquire(1): false at ReentrantLock$NonfairSync.tryAcquire(ReentrantLock.java:199)                                                                   |
|                                                                                                                                                 |     |       getState(): 1 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:128)                                                                               |
|                                                                                                                                                 |     |         state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                                     |
|                                                                                                                                                 |     |       getExclusiveOwnerThread(): Thread#1 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:135)                                                         |
|                                                                                                                                                 |     |         exclusiveOwnerThread ➜ Thread#1 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)                               |
|                                                                                                                                                 |     |   AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(Node#1, Node#2): true at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:916)  |
|                                                                                                                                                 |     |     pred.waitStatus ➜ -1 at AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire(AbstractQueuedSynchronizer.java:845)                                          |
|                                                                                                                                                 |     |   parkAndCheckInterrupt(): false at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:917)                                                 |
|                                                                                                                                                 |     |     LockSupport.park(NonfairSync#1) at AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:885)                                      |
|                                                                                                                                                 |     |       LockSupport.setBlocker(Thread#2, NonfairSync#1) at LockSupport.park(LockSupport.java:193)                                                                   |
|                                                                                                                                                 |     |         Unsafe#1.putObject(Thread#2, 76, NonfairSync#1) at LockSupport.setBlocker(LockSupport.java:144)                                                           |
|                                                                                                                                                 |     |       PARK at LockSupport.park(LockSupport.java:194)                                                                                                              |
|                                                                                                                                                 |     |       LockSupport.setBlocker(Thread#2, null) at LockSupport.park(LockSupport.java:195)                                                                            |
|                                                                                                                                                 |     |         Unsafe#1.putObject(Thread#2, 76, null) at LockSupport.setBlocker(LockSupport.java:144)                                                                    |
|                                                                                                                                                 |     └╶╶ switch (reason: active lock detected)                                                                                                                           |
|   from.getValue(): 6 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:62)                                               |                                                                                                                                                                         |
|     value ➜ 6 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   from.getValue(): 6 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:63)                                               |                                                                                                                                                                         |
|     value ➜ 6 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   from.setValue(1) at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:63)                                                 |                                                                                                                                                                         |
|     value = 1 at EmptyColumnAfterMinimizeTest$Number.setValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   to.getValue(): 0 at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:64)                                                 |                                                                                                                                                                         |
|     value ➜ 0 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   to.setValue(5) at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:64)                                                   |                                                                                                                                                                         |
|     value = 5 at EmptyColumnAfterMinimizeTest$Number.setValue(EmptyColumnAfterMinimizeTest.kt:67)                                               |                                                                                                                                                                         |
|   lock.unlock() at EmptyColumnAfterMinimizeTest.transfer(EmptyColumnAfterMinimizeTest.kt:59)                                                    |                                                                                                                                                                         |
|     sync.release(1): true at ReentrantLock.unlock(ReentrantLock.java:439)                                                                       |                                                                                                                                                                         |
|       tryRelease(1): true at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1302)                                           |                                                                                                                                                                         |
|         getState(): 1 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:147)                                                                  |                                                                                                                                                                         |
|           state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                 |                                                                                                                                                                         |
|         getExclusiveOwnerThread(): Thread#1 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:148)                                            |                                                                                                                                                                         |
|           exclusiveOwnerThread ➜ Thread#1 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)           |                                                                                                                                                                         |
|         setExclusiveOwnerThread(null) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:153)                                                  |                                                                                                                                                                         |
|           exclusiveOwnerThread = null at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)               |                                                                                                                                                                         |
|         setState(0) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:155)                                                                    |                                                                                                                                                                         |
|           state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:597)                                                 |                                                                                                                                                                         |
|       head ➜ Node#1 at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1303)                                                 |                                                                                                                                                                         |
|       h.waitStatus ➜ -1 at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1304)                                             |                                                                                                                                                                         |
|       unparkSuccessor(Node#1) at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1305)                                       |                                                                                                                                                                         |
|         node.waitStatus ➜ -1 at AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:691)                                 |                                                                                                                                                                         |
|         node.compareAndSetWaitStatus(-1, 0): true at AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:693)            |                                                                                                                                                                         |
|           waitStatus.compareAndSet(-1, 0): true at AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus(AbstractQueuedSynchronizer.java:533) |                                                                                                                                                                         |
|         node.next ➜ Node#2 at AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:701)                                   |                                                                                                                                                                         |
|         s.waitStatus ➜ 0 at AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:702)                                     |                                                                                                                                                                         |
|         s.thread ➜ Thread#2 at AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:709)                                  |                                                                                                                                                                         |
|         LockSupport.unpark(Thread#2) at AbstractQueuedSynchronizer.unparkSuccessor(AbstractQueuedSynchronizer.java:709)                         |                                                                                                                                                                         |
|           UNPARK at LockSupport.unpark(LockSupport.java:160)                                                                                    |                                                                                                                                                                         |
|   result: void                                                                                                                                  |                                                                                                                                                                         |
|                                                                                                                                                 |         node.predecessor(): Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:910)                                                     |
|                                                                                                                                                 |           prev ➜ Node#1 at AbstractQueuedSynchronizer$Node.predecessor(AbstractQueuedSynchronizer.java:509)                                                             |
|                                                                                                                                                 |         head ➜ Node#1 at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                                  |
|                                                                                                                                                 |         tryAcquire(1): true at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:911)                                                            |
|                                                                                                                                                 |           nonfairTryAcquire(1): true at ReentrantLock$NonfairSync.tryAcquire(ReentrantLock.java:199)                                                                    |
|                                                                                                                                                 |             getState(): 0 at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:128)                                                                               |
|                                                                                                                                                 |               state ➜ 0 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                                     |
|                                                                                                                                                 |             compareAndSetState(0, 1): true at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:130)                                                              |
|                                                                                                                                                 |               state.compareAndSet(0, 1): true at AbstractQueuedSynchronizer.compareAndSetState(AbstractQueuedSynchronizer.java:612)                                     |
|                                                                                                                                                 |             setExclusiveOwnerThread(Thread#2) at ReentrantLock$Sync.nonfairTryAcquire(ReentrantLock.java:131)                                                           |
|                                                                                                                                                 |               exclusiveOwnerThread = Thread#2 at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)                               |
|                                                                                                                                                 |         setHead(Node#2) at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:912)                                                                |
|                                                                                                                                                 |           head = Node#2 at AbstractQueuedSynchronizer.setHead(AbstractQueuedSynchronizer.java:675)                                                                      |
|                                                                                                                                                 |           node.thread = null at AbstractQueuedSynchronizer.setHead(AbstractQueuedSynchronizer.java:676)                                                                 |
|                                                                                                                                                 |           node.prev = null at AbstractQueuedSynchronizer.setHead(AbstractQueuedSynchronizer.java:677)                                                                   |
|                                                                                                                                                 |         head.next = null at AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:913)                                                               |
|                                                                                                                                                 |   account.getValue(): 1 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:53)                                                                    |
|                                                                                                                                                 |     value ➜ 1 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                                                       |
|                                                                                                                                                 |   account.setValue(-3) at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:53)                                                                     |
|                                                                                                                                                 |     value = -3 at EmptyColumnAfterMinimizeTest$Number.setValue(EmptyColumnAfterMinimizeTest.kt:67)                                                                      |
|                                                                                                                                                 |   account.getValue(): -3 at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:54)                                                                   |
|                                                                                                                                                 |     value ➜ -3 at EmptyColumnAfterMinimizeTest$Number.getValue(EmptyColumnAfterMinimizeTest.kt:67)                                                                      |
|                                                                                                                                                 |   lock.unlock() at EmptyColumnAfterMinimizeTest.withdraw(EmptyColumnAfterMinimizeTest.kt:54)                                                                            |
|                                                                                                                                                 |     sync.release(1): true at ReentrantLock.unlock(ReentrantLock.java:439)                                                                                               |
|                                                                                                                                                 |       tryRelease(1): true at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1302)                                                                   |
|                                                                                                                                                 |         getState(): 1 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:147)                                                                                          |
|                                                                                                                                                 |           state ➜ 1 at AbstractQueuedSynchronizer.getState(AbstractQueuedSynchronizer.java:588)                                                                         |
|                                                                                                                                                 |         getExclusiveOwnerThread(): Thread#2 at ReentrantLock$Sync.tryRelease(ReentrantLock.java:148)                                                                    |
|                                                                                                                                                 |           exclusiveOwnerThread ➜ Thread#2 at AbstractOwnableSynchronizer.getExclusiveOwnerThread(AbstractOwnableSynchronizer.java:84)                                   |
|                                                                                                                                                 |         setExclusiveOwnerThread(null) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:153)                                                                          |
|                                                                                                                                                 |           exclusiveOwnerThread = null at AbstractOwnableSynchronizer.setExclusiveOwnerThread(AbstractOwnableSynchronizer.java:74)                                       |
|                                                                                                                                                 |         setState(0) at ReentrantLock$Sync.tryRelease(ReentrantLock.java:155)                                                                                            |
|                                                                                                                                                 |           state = 0 at AbstractQueuedSynchronizer.setState(AbstractQueuedSynchronizer.java:597)                                                                         |
|                                                                                                                                                 |       head ➜ Node#2 at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1303)                                                                         |
|                                                                                                                                                 |       h.waitStatus ➜ 0 at AbstractQueuedSynchronizer.release(AbstractQueuedSynchronizer.java:1304)                                                                      |
|                                                                                                                                                 |   result: -3                                                                                                                                                            |
| ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
